{"version":3,"file":"concepts-04-Storybook-mdx.iframe.bundle.js","mappingsjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lds/./docs/stories/concepts/04-Storybook.mdx","webpack://lds/./node_modules/@mdx-js/react/lib/index.js","webpack://lds/./node_modules/@storybook/blocks/dist/ sync","webpack://lds/./node_modules/@storybook/core/dist/components/ sync","webpack://lds/./node_modules/@storybook/core/dist/theming/ sync"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"C:\\\\Users\\\\User\\\\Desktop\\\\Web파트\\\\LDS\\\\node_modules\\\\@storybook\\\\addon-docs\\\\dist\\\\shims\\\\mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      title: \"Concepts/04. 스토리북 설정 및 문서화\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"스토리북-설정-및-문서화\",\n      children: \"스토리북 설정 및 문서화\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"스토리북-기본-설정\",\n      children: \"스토리북 기본 설정\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"각 디자인 시스템별 스토리북 페이지 구성\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CSS 변수 파일 로딩\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"재사용 가능한 컴포넌트 문서화\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.strong, {\n        children: [_jsx(_components.code, {\n          children: \".storybook/main.js\"\n        }), \":\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"module.exports = {\\r\\n  stories: [\\r\\n    \\\"../design-systems/*/components/**/*.stories.@(js|jsx|ts|tsx|mdx)\\\"\\r\\n  ],\\r\\n  addons: [\\r\\n    '@storybook/addon-links',\\r\\n    '@storybook/addon-essentials',\\r\\n    '@storybook/addon-interactions',\\r\\n    '@storybook/addon-a11y'\\r\\n  ],\\r\\n  framework: '@storybook/react',\\r\\n  staticDirs: ['../public']\\r\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsxs(_components.strong, {\n        children: [_jsx(_components.code, {\n          children: \".storybook/preview.js\"\n        }), \":\"]\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-javascript\",\n        children: \"import '../design-systems/system-1/styles/variables.css';\\r\\n\\r\\nexport const parameters = {\\r\\n  controls: {\\r\\n    matchers: {\\r\\n      color: /(background|color)$/i,\\r\\n      date: /Date$/i,\\r\\n    },\\r\\n  }\\r\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"스토리-작성-가이드라인\",\n      children: \"스토리 작성 가이드라인\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"컴포넌트별로 스토리 파일 생성\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"모든 상태와 변형에 대한 스토리 포함\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"접근성 테스트 포함\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"컨트롤을 통한 속성 조작 가능하게 설정\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"export default {\\r\\n  title: 'System-1/Primitives/Button',\\r\\n  component: Button,\\r\\n  argTypes: {\\r\\n    variant: {\\r\\n      control: 'select',\\r\\n      options: ['primary', 'secondary', 'cta'],\\r\\n      description: '버튼 종류(상황별)'\\r\\n    },\\r\\n    style: {\\r\\n      control: 'select',\\r\\n      options: ['filled', 'outlined', 'transparent'],\\r\\n      description: '버튼 스타일'\\r\\n    }\\r\\n  }\\r\\n};\\r\\n\\r\\n// 기본 버튼 예시\\r\\nexport const Primary = {\\r\\n  args: {\\r\\n    variant: 'primary',\\r\\n    style: 'filled',\\r\\n    size: 'md',\\r\\n    children: '기본 버튼'\\r\\n  }\\r\\n};\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"컴포넌트-문서화\",\n      children: \"컴포넌트 문서화\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"스토리북 문서화는 다음 요소를 포함해야 합니다:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"컴포넌트 설명\"\n        }), \": 컴포넌트의 목적과 사용 사례\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Props 테이블\"\n        }), \": 모든 속성과 타입, 기본값 설명\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"예시 코드\"\n        }), \": 사용 방법을 보여주는 샘플 코드\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"다양한 변형\"\n        }), \": 컴포넌트의 모든 상태와 변형 표시\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"접근성 정보\"\n        }), \": 접근성 준수 방법 안내\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"배포-설정\",\n      children: \"배포 설정\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"정적 사이트로 빌드\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"GitHub Pages, Vercel 등으로 배포\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"CI/CD 파이프라인 구성\"\n      }), \"\\n\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/blocks/dist sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/core/dist/theming sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}