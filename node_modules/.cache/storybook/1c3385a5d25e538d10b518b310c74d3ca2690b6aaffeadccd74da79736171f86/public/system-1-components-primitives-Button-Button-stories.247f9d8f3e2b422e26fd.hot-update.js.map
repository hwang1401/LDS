{"version":3,"file":"system-1-components-primitives-Button-Button-stories.247f9d8f3e2b422e26fd.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgsources":["webpack://lds/./design-systems/system-1/components/primitives/Button/Button.stories.jsx"],"sourcesContent":["import React from 'react';\nimport Button from './index';\n\n/**\n * 버튼 컴포넌트\n * \n * 버튼은 사용자 작업을 시작하거나 이벤트를 트리거하는 데 사용됩니다.\n * \n * ## 사용 지침\n * \n * - **Primary**: 화면에서 가장 중요한 작업에 사용합니다.\n * - **Secondary**: 덜 중요한 작업이나 대안을 제공할 때 사용합니다.\n * - **CTA (Call to Action)**: 사용자의 주의를 집중시켜야 하는 중요한 행동 유도에 사용합니다.\n * \n * ## 접근성\n * \n * - 버튼 텍스트는 의미 있고 명확해야 합니다.\n * - 아이콘만 사용하는 경우 반드시 적절한 aria-label을 제공해야 합니다.\n * - 키보드 사용자를 위해 포커스 스타일이 명확해야 합니다.\n */\nconst meta = {\n  title: 'System-1/Primitives/Button',\n  component: Button,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n버튼은 사용자가 작업을 시작하거나 선택을 확인하는 데 사용되는 인터랙티브 요소입니다.\n다양한 디자인 변형과 크기를 제공하여 다양한 상황에 맞게 사용할 수 있습니다.\n\n### 사용 시기\n\n- 폼 제출, 대화상자 확인, 단계 진행 등 사용자 작업이 필요할 때\n- 주요 작업과 보조 작업을 구분해야 할 때\n- 사용자의 주의를 끌어야 하는 중요한 행동 유도가 필요할 때\n\n### 접근성 고려사항\n\n- 명확한 작동 라벨 사용\n- 충분한 대비와 포커스 표시\n- 적절한 크기와 터치 영역\n        `\n      }\n    }\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { \n      control: 'select',\n      options: ['primary', 'secondary', 'cta'],\n      description: '버튼 종류 (primary, secondary, cta)',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' }\n      }\n    },\n    style: {\n      control: 'select',\n      options: ['filled', 'outlined', 'transparent'],\n      description: '버튼 스타일 (filled, outlined, transparent)',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'filled' }\n      }\n    },\n    size: {\n      control: 'select',\n      options: ['xs', 'sm', 'md', 'lg', 'xl'],\n      description: '버튼 크기 (xs, sm, md, lg, xl)',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'md' }\n      }\n    },\n    fullWidth: {\n      control: 'boolean',\n      description: '전체 너비 적용 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    disabled: {\n      control: 'boolean',\n      description: '비활성화 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    leftIcon: {\n      control: 'boolean',\n      description: '왼쪽 아이콘 표시 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    rightIcon: {\n      control: 'boolean',\n      description: '오른쪽 아이콘 표시 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    iconOnly: {\n      control: 'boolean',\n      description: '아이콘만 표시 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    children: {\n      control: 'text',\n      description: '버튼 내용',\n      table: {\n        type: { summary: 'React.ReactNode' }\n      }\n    },\n    onClick: { \n      description: '클릭 이벤트 핸들러', \n      table: {\n        type: { summary: 'function' }\n      },\n      action: 'clicked'\n    }\n  }\n};\n\nexport default meta;\n\n/**\n * 기본 Primary 버튼입니다.\n * 가장 중요한 작업에 사용되며 화면에서 시각적으로 가장 두드러집니다.\n */\nexport const Primary = {\n  args: {\n    variant: 'primary',\n    style: 'filled',\n    size: 'md',\n    fullWidth: false,\n    disabled: false,\n    leftIcon: false,\n    rightIcon: false,\n    iconOnly: false,\n    children: 'Primary 버튼'\n  }\n};\n\n/**\n * Secondary 버튼은 덜 중요한 작업이나 대안을 제공할 때 사용됩니다.\n * Primary 버튼과 함께 사용될 때 시각적 계층 구조를 만듭니다.\n */\nexport const Secondary = {\n  args: {\n    variant: 'secondary',\n    style: 'filled',\n    size: 'md',\n    fullWidth: false,\n    disabled: false,\n    leftIcon: false,\n    rightIcon: false,\n    iconOnly: false,\n    children: 'Secondary 버튼'\n  }\n};\n\n/**\n * CTA(Call to Action) 버튼은 사용자의 주의를 집중시켜야 하는 \n * 중요한 행동 유도에 사용됩니다.\n */\nexport const CTA = {\n  args: {\n    variant: 'cta',\n    style: 'filled',\n    size: 'md',\n    fullWidth: false,\n    disabled: false,\n    leftIcon: false,\n    rightIcon: false,\n    iconOnly: false,\n    children: 'CTA 버튼'\n  }\n};\n\n/**\n * 아이콘이 포함된 버튼 예시입니다.\n */\nexport const WithIcons = {\n  args: {\n    variant: 'primary',\n    style: 'filled',\n    size: 'md',\n    leftIcon: true,\n    children: '아이콘 버튼'\n  }\n};\n\n/**\n * 다양한 버튼 스타일을 보여주는 예시입니다.\n */\nexport const Styles = {\n  render: () => (\n    <div style={{ display: 'flex', gap: '16px' }}>\n      <Button variant=\"primary\" style=\"filled\">Filled</Button>\n      <Button variant=\"primary\" style=\"outlined\">Outlined</Button>\n      <Button variant=\"primary\" style=\"transparent\">Transparent</Button>\n    </div>\n  )\n};\n\n/**\n * 다양한 크기의 버튼을 보여주는 예시입니다.\n */\nexport const Sizes = {\n  render: () => (\n    <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\n      <Button size=\"xs\">XS</Button>\n      <Button size=\"sm\">SM</Button>\n      <Button size=\"md\">MD</Button>\n      <Button size=\"lg\">LG</Button>\n      <Button size=\"xl\">XL</Button>\n    </div>\n  )\n};\n\n/**\n * 아이콘만 있는 버튼 예시입니다.\n */\nexport const IconOnly = {\n  args: {\n    variant: 'primary',\n    style: 'filled',\n    size: 'md',\n    iconOnly: true,\n    children: '아이콘 버튼'\n  }\n};\n\n/**\n * 비활성화된 버튼 예시입니다.\n */\nexport const Disabled = {\n  args: {\n    variant: 'primary',\n    style: 'filled',\n    size: 'md',\n    disabled: true,\n    children: '비활성화 버튼'\n  }\n};\n\n"],"names":[],"sourceRoot":""}