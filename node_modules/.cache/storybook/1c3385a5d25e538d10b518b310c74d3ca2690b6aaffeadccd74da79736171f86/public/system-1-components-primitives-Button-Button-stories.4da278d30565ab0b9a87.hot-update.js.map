{"version":3,"file":"system-1-components-primitives-Button-Button-stories.4da278d30565ab0b9a87.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAasources":["webpack://lds/./design-systems/system-1/components/primitives/Button/Button.stories.jsx"],"sourcesContent":["import React from 'react';\nimport Button from './index';\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories\nconst meta = {\n  title: 'System-1/Primitives/Button',\n  component: Button,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: `\n## 버튼 컴포넌트\n\n버튼은 사용자가 단일 작업이나 이벤트를 트리거할 때 사용합니다.\n\n### 사용 가이드라인\n\n- **Primary** 버튼은 페이지에서 가장 중요한 작업에 사용합니다.\n- **Secondary** 버튼은 보조 작업에 사용합니다.\n- **CTA** 버튼은 사용자에게 즉각적인 행동을 유도하는 중요한 작업에 사용합니다.\n- 한 화면에 너무 많은 버튼을 사용하지 마세요.\n- 버튼 텍스트는 명확하고 간결하게 작성하세요.\n        `\n      }\n    }\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { \n      control: 'select',\n      options: ['primary', 'secondary', 'cta'],\n      description: '버튼 종류',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' }\n      }\n    },\n    onClick: { \n      action: 'clicked',\n      table: { \n        disable: false,\n        type: { summary: 'function' }\n      }\n    },\n    style: {\n      control: 'select',\n      options: ['filled', 'outlined', 'transparent'],\n      description: '버튼 스타일',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'filled' }\n      }\n    },\n    size: {\n      control: 'select',\n      options: ['xs', 'sm', 'md', 'lg', 'xl'],\n      description: '버튼 크기',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'md' }\n      }\n    },\n    fullWidth: {\n      control: 'boolean',\n      description: '전체 너비 적용 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    disabled: {\n      control: 'boolean',\n      description: '비활성화 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    leftIcon: {\n      control: 'boolean',\n      description: '왼쪽 아이콘 표시 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    rightIcon: {\n      control: 'boolean',\n      description: '오른쪽 아이콘 표시 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    iconOnly: {\n      control: 'boolean',\n      description: '아이콘만 표시 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false }\n      }\n    },\n    children: {\n      control: 'text',\n      description: '버튼 내용',\n      table: {\n        type: { summary: 'ReactNode' }\n      }\n    }\n  }\n};\n\nexport default meta;\n\n// 기본 버튼 예시\nexport const Overview = () => (\n  <div style={{ display: 'flex', flexDirection: 'column', gap: '2rem' }}>\n    <div>\n      <h3>버튼 종류 (Variant)</h3>\n      <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n        <Button variant=\"primary\" style=\"filled\">Primary</Button>\n        <Button variant=\"secondary\" style=\"filled\">Secondary</Button>\n        <Button variant=\"cta\" style=\"filled\">CTA</Button>\n      </div>\n    </div>\n    \n    <div>\n      <h3>버튼 스타일 (Style)</h3>\n      <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n        <Button variant=\"primary\" style=\"filled\">Filled</Button>\n        <Button variant=\"primary\" style=\"outlined\">Outlined</Button>\n        <Button variant=\"primary\" style=\"transparent\">Transparent</Button>\n      </div>\n    </div>\n    \n    <div>\n      <h3>버튼 크기 (Size)</h3>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem', marginTop: '0.5rem' }}>\n        <Button variant=\"primary\" size=\"xs\">XS</Button>\n        <Button variant=\"primary\" size=\"sm\">SM</Button>\n        <Button variant=\"primary\" size=\"md\">MD</Button>\n        <Button variant=\"primary\" size=\"lg\">LG</Button>\n        <Button variant=\"primary\" size=\"xl\">XL</Button>\n      </div>\n    </div>\n    \n    <div>\n      <h3>아이콘 버튼 (Icon)</h3>\n      <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n        <Button variant=\"primary\" leftIcon>왼쪽 아이콘</Button>\n        <Button variant=\"primary\" rightIcon>오른쪽 아이콘</Button>\n        <Button variant=\"primary\" leftIcon rightIcon>양쪽 아이콘</Button>\n        <Button variant=\"primary\" iconOnly>Icon</Button>\n      </div>\n    </div>\n    \n    <div>\n      <h3>상태 (State)</h3>\n      <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n        <Button variant=\"primary\">기본 상태</Button>\n        <Button variant=\"primary\" disabled>비활성화</Button>\n      </div>\n    </div>\n    \n    <div>\n      <h3>너비 (Width)</h3>\n      <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem', marginTop: '0.5rem', width: '100%' }}>\n        <Button variant=\"primary\">기본 너비</Button>\n        <Button variant=\"primary\" fullWidth>전체 너비</Button>\n      </div>\n    </div>\n  </div>\n);\n\n// 각 버튼 종류별 예시\nexport const Primary = {\n  name: 'Primary 버튼',\n  args: {\n    variant: 'primary',\n    style: 'filled',\n    size: 'md',\n    fullWidth: false,\n    disabled: false,\n    leftIcon: false,\n    rightIcon: false,\n    iconOnly: false,\n    children: 'Primary 버튼'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Primary 버튼은 페이지에서 가장 중요한 작업에 사용합니다. 한 화면에 하나의 Primary 버튼만 사용하는 것이 좋습니다.'\n      }\n    }\n  }\n};\n\nexport const Secondary = {\n  name: 'Secondary 버튼',\n  args: {\n    variant: 'secondary',\n    style: 'filled',\n    size: 'md',\n    fullWidth: false,\n    disabled: false,\n    leftIcon: false,\n    rightIcon: false,\n    iconOnly: false,\n    children: 'Secondary 버튼'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Secondary 버튼은 Primary 버튼보다 덜 중요한 작업에 사용합니다. 일반적으로 취소, 뒤로 가기 등의 작업에 사용됩니다.'\n      }\n    }\n  }\n};\n\nexport const CTA = {\n  name: 'CTA 버튼',\n  args: {\n    variant: 'cta',\n    style: 'filled',\n    size: 'md',\n    fullWidth: false,\n    disabled: false,\n    leftIcon: false,\n    rightIcon: false,\n    iconOnly: false,\n    children: 'CTA 버튼'\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'CTA(Call To Action) 버튼은 사용자에게 즉각적인 행동을 유도하는 중요한 작업에 사용합니다. 등록하기, 구매하기 등의 명확한 목표를 가진 작업에 사용됩니다.'\n      }\n    }\n  }\n};\n\nexport const WithIcons = {\n  name: '아이콘 버튼',\n  render: () => (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n      <div style={{ display: 'flex', gap: '1rem' }}>\n        <Button variant=\"primary\" leftIcon>왼쪽 아이콘</Button>\n        <Button variant=\"primary\" rightIcon>오른쪽 아이콘</Button>\n        <Button variant=\"primary\" leftIcon rightIcon>양쪽 아이콘</Button>\n      </div>\n      <div style={{ display: 'flex', gap: '1rem' }}>\n        <Button variant=\"primary\" iconOnly />\n        <Button variant=\"secondary\" iconOnly />\n        <Button variant=\"cta\" iconOnly />\n      </div>\n    </div>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: '아이콘을 추가하여 버튼의 의미를 강화하거나, 아이콘만 사용하여 공간을 절약할 수 있습니다.'\n      }\n    }\n  }\n};\n\nexport const ButtonStyles = {\n  name: '버튼 스타일',\n  render: () => (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '1.5rem' }}>\n      <div>\n        <h4>Primary</h4>\n        <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n          <Button variant=\"primary\" style=\"filled\">Filled</Button>\n          <Button variant=\"primary\" style=\"outlined\">Outlined</Button>\n          <Button variant=\"primary\" style=\"transparent\">Transparent</Button>\n        </div>\n      </div>\n      <div>\n        <h4>Secondary</h4>\n        <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n          <Button variant=\"secondary\" style=\"filled\">Filled</Button>\n          <Button variant=\"secondary\" style=\"outlined\">Outlined</Button>\n          <Button variant=\"secondary\" style=\"transparent\">Transparent</Button>\n        </div>\n      </div>\n      <div>\n        <h4>CTA</h4>\n        <div style={{ display: 'flex', gap: '1rem', marginTop: '0.5rem' }}>\n          <Button variant=\"cta\" style=\"filled\">Filled</Button>\n          <Button variant=\"cta\" style=\"outlined\">Outlined</Button>\n          <Button variant=\"cta\" style=\"transparent\">Transparent</Button>\n        </div>\n      </div>\n    </div>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: `\n버튼 스타일은 중요도와 용도에 따라 선택할 수 있습니다:\n- **Filled**: 가장 눈에 띄는 스타일로, 중요한 작업에 사용합니다.\n- **Outlined**: 중요도가 중간인 작업에 사용하며, 배경색이 없어 더 가벼운 느낌을 줍니다.\n- **Transparent**: 가장 가벼운 느낌으로, 부가적인 작업이나 메뉴 버튼 등에 사용합니다.\n        `\n      }\n    }\n  }\n};\n\nexport const ButtonSizes = {\n  name: '버튼 크기',\n  render: () => (\n    <div style={{ display: 'flex', flexDirection: 'column', gap: '1rem' }}>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n        <div style={{ width: '30px', textAlign: 'right' }}>XS:</div>\n        <Button variant=\"primary\" size=\"xs\">XS 버튼</Button>\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n        <div style={{ width: '30px', textAlign: 'right' }}>SM:</div>\n        <Button variant=\"primary\" size=\"sm\">SM 버튼</Button>\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n        <div style={{ width: '30px', textAlign: 'right' }}>MD:</div>\n        <Button variant=\"primary\" size=\"md\">MD 버튼</Button>\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n        <div style={{ width: '30px', textAlign: 'right' }}>LG:</div>\n        <Button variant=\"primary\" size=\"lg\">LG 버튼</Button>\n      </div>\n      <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n        <div style={{ width: '30px', textAlign: 'right' }}>XL:</div>\n        <Button variant=\"primary\" size=\"xl\">XL 버튼</Button>\n      </div>\n    </div>\n  ),\n  parameters: {\n    docs: {\n      description: {\n        story: '버튼의 크기는 사용 맥락과 중요도에 따라 선택할 수 있습니다. 일반적으로 MD 크기가 가장 많이 사용됩니다.'\n      }\n    }\n  }\n};\n\n"],"names":[],"sourceRoot":""}