{"version":3,"file":"design-systems_system-1_components_primitives_Button_index_jsx.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAXA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAIA;AAEA;AAEA;AACA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;AChphBA;AAAA;AAAA;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAMA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lds/./design-systems/system-1/components/primitives/Button/Button.css?c721","webpack://lds/./design-systems/system-1/components/primitives/Button/index.jsx","webpack://lds/./design-systems/system-1/components/primitives/Button/Button.css","webpack://lds/./shared/components/Icon/index.jsx"],"sourcesContent":["\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n  var p;\n  for (p in a) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n  for (p in b) {\n    if (isNamedExport && p === \"default\") {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (!a[p]) {\n      return false;\n    }\n  }\n  return true;\n};\n    var isNamedExport = !content.locals;\n    var oldLocals = isNamedExport ? namedExport : content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\",\n      function () {\n        if (!isEqualLocals(oldLocals, isNamedExport ? namedExport : content.locals, isNamedExport)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = isNamedExport ? namedExport : content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./Button.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Icon from '../../../../../shared/components/Icon';\nimport './Button.css';\n\n/**\n * 버튼 컴포넌트\n * @param {object} props - 컴포넌트 속성\n * @param {'filled'|'outlined'|'transparent'} props.style - 버튼 스타일\n * @param {'xs'|'sm'|'md'|'lg'|'xl'} props.size - 버튼 크기\n * @param {boolean} props.fullWidth - 전체 너비 적용 여부\n * @param {boolean} props.disabled - 비활성화 여부\n * @param {boolean} props.leftIcon - 왼쪽 아이콘 표시 여부\n * @param {boolean} props.rightIcon - 오른쪽 아이콘 표시 여부\n * @param {boolean} props.iconOnly - 아이콘만 표시 여부\n * @param {React.ReactNode} props.children - 버튼 내용\n * @param {function} props.onClick - 클릭 이벤트 핸들러\n */\nconst Button = ({\n  variant = 'primary',\n  style = 'filled',\n  size = 'md',\n  fullWidth = false,\n  disabled = false,\n  leftIcon = false,\n  rightIcon = false,\n  iconOnly = false,\n  children,\n  onClick,\n  ...rest\n}) => {\n  const buttonClasses = [\n    'btn',\n    `btn-${variant}`,\n    `btn-${style}`,\n    `btn-${size}`,\n    fullWidth ? 'btn-full-width' : '',\n    iconOnly ? 'btn-icon-only' : '',\n  ].filter(Boolean).join(' ');\n\n  // 아이콘 크기는 버튼 크기보다 한 단계 작게 설정\n  const getIconSize = (btnSize) => {\n    const sizeMap = {\n      xs: 'xs',\n      sm: 'xs',\n      md: 'sm',\n      lg: 'md',\n      xl: 'lg'\n    };\n    return sizeMap[btnSize] || 'sm';\n  };\n\n  // 버튼 타입에 따른 기본 아이콘 선택\n  const getDefaultIcon = (type) => {\n    const iconMap = {\n      leftIcon: {\n        primary: 'line-icons/Arrow/Chevron/up',\n        secondary: 'line-icons/Arrow/Chevron/up', \n        cta: 'line-icons/Arrow/Chevron/up'\n      },\n      rightIcon: {\n        primary: 'line-icons/Arrow/Chevron/right',\n        secondary: 'line-icons/Arrow/Chevron/right',\n        cta: 'line-icons/Arrow/Chevron/right'\n      },\n      iconOnly: {\n        primary: 'line-icons/Arrow/Chevron/right',\n        secondary: 'line-icons/Arrow/Chevron/up',\n        cta: 'line-icons/Arrow/Chevron/up'\n      }\n    };\n    \n    return iconMap[type][variant] || iconMap[type].primary;\n  };\n\n  const iconSize = getIconSize(size);\n\n  // iconOnly인 경우 버튼 내용은 아이콘만 표시\n  if (iconOnly) {\n    return (\n      <button \n        className={buttonClasses} \n        disabled={disabled}\n        onClick={onClick}\n        {...rest}\n        aria-label={typeof children === 'string' ? children : 'Icon button'}\n      >\n        <span className=\"btn-icon\">\n          <Icon name={getDefaultIcon('iconOnly')} size={iconSize} />\n        </span>\n      </button>\n    );\n  }\n\n  return (\n    <button \n      className={buttonClasses} \n      disabled={disabled}\n      onClick={onClick}\n      {...rest}\n    >\n      {leftIcon && (\n        <span className=\"btn-icon btn-icon-left\">\n          <Icon name={getDefaultIcon('leftIcon')} size={iconSize} />\n        </span>\n      )}\n      <span className=\"btn-text\">{children}</span>\n      {rightIcon && (\n        <span className=\"btn-icon btn-icon-right\">\n          <Icon name={getDefaultIcon('rightIcon')} size={iconSize} />\n        </span>\n      )}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  style: PropTypes.oneOf(['filled', 'outlined', 'transparent']),\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  fullWidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  leftIcon: PropTypes.bool,\n  rightIcon: PropTypes.bool,\n  iconOnly: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func\n};\n\nexport default Button; ","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../styles/variables.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* Button 컴포넌트 기본 스타일 */\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--semantic-spacing-sm, 8px);\n  border-radius: var(--semantic-border-radius-md, 4px);\n  cursor: pointer;\n  font-family: var(--semantic-font-family-body, sans-serif);\n  text-align: center;\n  transition: all 0.2s ease-in-out;\n  position: relative;\n  padding-left: var(--semantic-spacingHor-global-sm, 12px);\n  padding-right: var(--semantic-spacingHor-global-sm, 12px);\n  padding-top: var(--semantic-spacingVer-global-xxs, 4px);\n  padding-bottom: var(--semantic-spacingVer-global-xxs, 4px);\n}\n\n/* 버튼 크기 - 높이 기반으로 설정 */\n.btn-xs {\n  height: var(--semantic-height-global-sm, 24px);\n  font-size: var(--semantic-font-size-xs, 12px);\n}\n\n.btn-sm {\n  height: var(--semantic-height-global-lg, 32px);\n  font-size: var(--semantic-font-size-sm, 14px);\n}\n\n.btn-md {\n  height: var(--semantic-height-global-xl, 36px);\n  font-size: var(--semantic-font-size-md, 16px);\n}\n\n.btn-lg {\n  height: var(--semantic-height-global-xl, 36px);\n  font-size: var(--semantic-font-size-lg, 18px);\n}\n\n.btn-xl {\n  height: var(--semantic-height-global-xxl, 40px);\n  font-size: var(--semantic-font-size-xl, 20px);\n}\n\n/* 버튼 스타일 */\n\n/* Primary 버튼 */\n.btn-primary.btn-filled {\n  background-color: var(--semantic-color-primary-background-1-rest, #0078d4);\n  color: var(--semantic-color-primary-oncolor-global, #ffffff);\n  border: 1px solid transparent;\n}\n\n.btn-primary.btn-filled:hover {\n  background-color: var(--semantic-color-primary-background-1-hover, #106ebe);\n}\n\n.btn-primary.btn-filled:active {\n  background-color: var(--semantic-color-primary-background-1-pressed, #005a9e);\n}\n\n.btn-primary.btn-outlined {\n  background-color: transparent;\n  color: var(--semantic-color-primary-foreground-1-rest, #0078d4);\n  border: 1px solid var(--semantic-color-primary-foreground-1-rest, #0078d4);\n}\n\n.btn-primary.btn-outlined:hover {\n  background-color: var(--semantic-color-primary-background-3-hover, #deecf9);\n}\n\n.btn-primary.btn-transparent {\n  background-color: transparent;\n  color: var(--semantic-color-primary-foreground-1-rest, #0078d4);\n  border: 1px solid transparent;\n}\n\n.btn-primary.btn-transparent:hover {\n  background-color: var(--semantic-color-primary-background-3-hover, #deecf9);\n}\n\n/* Secondary 버튼 */\n.btn-secondary.btn-filled {\n  background-color: var(--semantic-color-secondary-background-1-rest, #e1dfdd);\n  color: var(--semantic-color-secondary-foreground-1-rest, #323130);\n  border: 1px solid transparent;\n}\n\n.btn-secondary.btn-filled:hover {\n  background-color: var(--semantic-color-secondary-background-1-hover, #c8c6c4);\n}\n\n/* CTA 버튼 */\n.btn-cta.btn-filled {\n  background-color: var(--semantic-color-cta-background-1-rest, #d13438);\n  color: var(--semantic-color-cta-oncolor-global, #ffffff);\n  border: 1px solid transparent;\n}\n\n.btn-cta.btn-filled:hover {\n  background-color: var(--semantic-color-cta-background-1-hover, #a4262c);\n}\n\n/* 비활성화 버튼 */\n.btn:disabled {\n  opacity: 0.4;\n  cursor: not-allowed;\n}\n\n/* 전체 너비 버튼 */\n.btn-full-width {\n  width: 100%;\n}\n\n/* 아이콘 버튼 스타일 */\n.btn-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 아이콘 크기 */\n.btn-xs .btn-icon .icon {\n  width: var(--semantic-size-icon-xs, 16px);\n  height: var(--semantic-size-icon-xs, 16px);\n}\n\n.btn-sm .btn-icon .icon {\n  width: var(--semantic-size-icon-xs, 16px);\n  height: var(--semantic-size-icon-xs, 16px);\n}\n\n.btn-md .btn-icon .icon {\n  width: var(--semantic-size-icon-sm, 20px);\n  height: var(--semantic-size-icon-sm, 20px);\n}\n\n.btn-lg .btn-icon .icon {\n  width: var(--semantic-size-icon-md, 24px);\n  height: var(--semantic-size-icon-md, 24px);\n}\n\n.btn-xl .btn-icon .icon {\n  width: var(--semantic-size-icon-lg, 32px);\n  height: var(--semantic-size-icon-lg, 32px);\n}\n\n/* 아이콘 색상 (버튼 색상과 동일하게) */\n.btn-primary.btn-filled .btn-icon {\n  color: var(--semantic-color-primary-oncolor-global, #ffffff);\n}\n\n.btn-primary.btn-outlined .btn-icon,\n.btn-primary.btn-transparent .btn-icon {\n  color: var(--semantic-color-primary-foreground-1-rest, #0078d4);\n}\n\n.btn-secondary.btn-filled .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-rest, #323130);\n}\n\n.btn-secondary.btn-outlined .btn-icon,\n.btn-secondary.btn-transparent .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-rest, #323130);\n}\n\n.btn-cta.btn-filled .btn-icon {\n  color: var(--semantic-color-cta-oncolor-global, #ffffff);\n}\n\n.btn-cta.btn-outlined .btn-icon,\n.btn-cta.btn-transparent .btn-icon {\n  color: var(--semantic-color-cta-foreground-1-rest, #d13438);\n}\n\n/* 비활성화 버튼의 아이콘 */\n.btn:disabled .btn-icon {\n  opacity: 0.4;\n}\n\n.btn-icon-left {\n  margin-right: var(--semantic-spacing-2xs, 2px);\n}\n\n.btn-icon-right {\n  margin-left: var(--semantic-spacing-2xs, 2px);\n}\n\n/* 아이콘 전용 버튼 */\n.btn-icon-only {\n  padding: var(--semantic-spacing-xs, 4px);\n  aspect-ratio: 1 / 1;\n}\n\n.btn-icon-only.btn-xs {\n  min-width: var(--semantic-height-global-sm, 24px);\n  height: var(--semantic-height-global-sm, 24px);\n}\n\n.btn-icon-only.btn-sm {\n  min-width: var(--semantic-height-global-lg, 32px);\n  height: var(--semantic-height-global-lg, 32px);\n}\n\n.btn-icon-only.btn-md {\n  min-width: var(--semantic-height-global-xl, 36px);\n  height: var(--semantic-height-global-xl, 36px);\n}\n\n.btn-icon-only.btn-lg {\n  min-width: var(--semantic-height-global-xl, 36px);\n  height: var(--semantic-height-global-xl, 36px);\n}\n\n.btn-icon-only.btn-xl {\n  min-width: var(--semantic-height-global-xxl, 40px);\n  height: var(--semantic-height-global-xxl, 40px);\n}\n\n/* 텍스트 스타일 */\n.btn-text {\n  line-height: 1.2;\n}\n\n/* 버튼 텍스트 스타일 */\n.btn-text {\n  display: inline-flex;\n  align-items: center;\n  line-height: 1;\n}\n\n/* 아이콘 컨테이너 스타일 */\n.btn-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--icon-color, currentColor); /* CSS 변수로 아이콘 색상 제어 */\n}\n\n/* 아이콘 간격 */\n.btn-icon-left {\n  margin-right: var(--semantic-spacingHor-global-xxs);\n}\n\n.btn-icon-right {\n  margin-left: var(--semantic-spacingHor-global-xxs);\n}\n\n/* 버튼 종류별 아이콘 색상 */\n/* Primary */\n.btn-primary.btn-filled .btn-icon {\n  color: var(--semantic-color-primary-oncolor-global);\n}\n\n.btn-primary.btn-outlined .btn-icon,\n.btn-primary.btn-transparent .btn-icon {\n  color: var(--semantic-color-primary-foreground-1-rest);\n}\n\n.btn-primary.btn-outlined:hover:not(:disabled) .btn-icon,\n.btn-primary.btn-transparent:hover:not(:disabled) .btn-icon {\n  color: var(--semantic-color-primary-foreground-1-hovered);\n}\n\n.btn-primary.btn-outlined:active:not(:disabled) .btn-icon,\n.btn-primary.btn-transparent:active:not(:disabled) .btn-icon {\n  color: var(--semantic-color-primary-foreground-1-pressed);\n}\n\n.btn-primary.btn-outlined:disabled .btn-icon,\n.btn-primary.btn-transparent:disabled .btn-icon {\n  color: var(--semantic-color-primary-foreground-1-disabled);\n}\n\n/* Secondary */\n.btn-secondary.btn-filled .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-rest);\n}\n\n.btn-secondary.btn-outlined .btn-icon,\n.btn-secondary.btn-transparent .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-rest);\n}\n\n.btn-secondary.btn-outlined:hover:not(:disabled) .btn-icon,\n.btn-secondary.btn-transparent:hover:not(:disabled) .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-hovered);\n}\n\n.btn-secondary.btn-outlined:active:not(:disabled) .btn-icon,\n.btn-secondary.btn-transparent:active:not(:disabled) .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-pressed);\n}\n\n.btn-secondary.btn-outlined:disabled .btn-icon,\n.btn-secondary.btn-transparent:disabled .btn-icon {\n  color: var(--semantic-color-secondary-foreground-1-disabled);\n}\n\n/* CTA */\n.btn-cta.btn-filled .btn-icon {\n  color: var(--semantic-color-cta-oncolor-global);\n}\n\n.btn-cta.btn-outlined .btn-icon,\n.btn-cta.btn-transparent .btn-icon {\n  color: var(--semantic-color-cta-foreground-1-rest);\n}\n\n.btn-cta.btn-outlined:hover:not(:disabled) .btn-icon,\n.btn-cta.btn-transparent:hover:not(:disabled) .btn-icon {\n  color: var(--semantic-color-cta-foreground-1-hovered);\n}\n\n.btn-cta.btn-outlined:active:not(:disabled) .btn-icon,\n.btn-cta.btn-transparent:active:not(:disabled) .btn-icon {\n  color: var(--semantic-color-cta-foreground-1-pressed);\n}\n\n.btn-cta.btn-outlined:disabled .btn-icon,\n.btn-cta.btn-transparent:disabled .btn-icon {\n  color: var(--semantic-color-cta-foreground-1-disabled);\n}\n\n/* 아이콘 크기별 크기 조정 */\n.btn-icon-only.btn-xs {\n  padding: var(--semantic-spacingHor-global-xs);\n}\n\n.btn-icon-only.btn-sm {\n  padding: var(--semantic-spacingHor-global-sm);\n}\n\n.btn-icon-only.btn-md {\n  padding: var(--semantic-spacingHor-global-sm);\n}\n\n.btn-icon-only.btn-lg {\n  padding: var(--semantic-spacingHor-global-md);\n}\n\n.btn-icon-only.btn-xl {\n  padding: var(--semantic-spacingHor-global-md);\n}\n\n/* 추가 레이아웃 스타일 */\n.btn-full-width {\n  width: 100%;\n} `, \"\",{\"version\":3,\"sources\":[\"webpack://./design-systems/system-1/components/primitives/Button/Button.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@import '../../../styles/variables.css';\\n\\n/* Button 컴포넌트 기본 스타일 */\\n.btn {\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: var(--semantic-spacing-sm, 8px);\\n  border-radius: var(--semantic-border-radius-md, 4px);\\n  cursor: pointer;\\n  font-family: var(--semantic-font-family-body, sans-serif);\\n  text-align: center;\\n  transition: all 0.2s ease-in-out;\\n  position: relative;\\n  padding-left: var(--semantic-spacingHor-global-sm, 12px);\\n  padding-right: var(--semantic-spacingHor-global-sm, 12px);\\n  padding-top: var(--semantic-spacingVer-global-xxs, 4px);\\n  padding-bottom: var(--semantic-spacingVer-global-xxs, 4px);\\n}\\n\\n/* 버튼 크기 - 높이 기반으로 설정 */\\n.btn-xs {\\n  height: var(--semantic-height-global-sm, 24px);\\n  font-size: var(--semantic-font-size-xs, 12px);\\n}\\n\\n.btn-sm {\\n  height: var(--semantic-height-global-lg, 32px);\\n  font-size: var(--semantic-font-size-sm, 14px);\\n}\\n\\n.btn-md {\\n  height: var(--semantic-height-global-xl, 36px);\\n  font-size: var(--semantic-font-size-md, 16px);\\n}\\n\\n.btn-lg {\\n  height: var(--semantic-height-global-xl, 36px);\\n  font-size: var(--semantic-font-size-lg, 18px);\\n}\\n\\n.btn-xl {\\n  height: var(--semantic-height-global-xxl, 40px);\\n  font-size: var(--semantic-font-size-xl, 20px);\\n}\\n\\n/* 버튼 스타일 */\\n\\n/* Primary 버튼 */\\n.btn-primary.btn-filled {\\n  background-color: var(--semantic-color-primary-background-1-rest, #0078d4);\\n  color: var(--semantic-color-primary-oncolor-global, #ffffff);\\n  border: 1px solid transparent;\\n}\\n\\n.btn-primary.btn-filled:hover {\\n  background-color: var(--semantic-color-primary-background-1-hover, #106ebe);\\n}\\n\\n.btn-primary.btn-filled:active {\\n  background-color: var(--semantic-color-primary-background-1-pressed, #005a9e);\\n}\\n\\n.btn-primary.btn-outlined {\\n  background-color: transparent;\\n  color: var(--semantic-color-primary-foreground-1-rest, #0078d4);\\n  border: 1px solid var(--semantic-color-primary-foreground-1-rest, #0078d4);\\n}\\n\\n.btn-primary.btn-outlined:hover {\\n  background-color: var(--semantic-color-primary-background-3-hover, #deecf9);\\n}\\n\\n.btn-primary.btn-transparent {\\n  background-color: transparent;\\n  color: var(--semantic-color-primary-foreground-1-rest, #0078d4);\\n  border: 1px solid transparent;\\n}\\n\\n.btn-primary.btn-transparent:hover {\\n  background-color: var(--semantic-color-primary-background-3-hover, #deecf9);\\n}\\n\\n/* Secondary 버튼 */\\n.btn-secondary.btn-filled {\\n  background-color: var(--semantic-color-secondary-background-1-rest, #e1dfdd);\\n  color: var(--semantic-color-secondary-foreground-1-rest, #323130);\\n  border: 1px solid transparent;\\n}\\n\\n.btn-secondary.btn-filled:hover {\\n  background-color: var(--semantic-color-secondary-background-1-hover, #c8c6c4);\\n}\\n\\n/* CTA 버튼 */\\n.btn-cta.btn-filled {\\n  background-color: var(--semantic-color-cta-background-1-rest, #d13438);\\n  color: var(--semantic-color-cta-oncolor-global, #ffffff);\\n  border: 1px solid transparent;\\n}\\n\\n.btn-cta.btn-filled:hover {\\n  background-color: var(--semantic-color-cta-background-1-hover, #a4262c);\\n}\\n\\n/* 비활성화 버튼 */\\n.btn:disabled {\\n  opacity: 0.4;\\n  cursor: not-allowed;\\n}\\n\\n/* 전체 너비 버튼 */\\n.btn-full-width {\\n  width: 100%;\\n}\\n\\n/* 아이콘 버튼 스타일 */\\n.btn-icon {\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n/* 아이콘 크기 */\\n.btn-xs .btn-icon .icon {\\n  width: var(--semantic-size-icon-xs, 16px);\\n  height: var(--semantic-size-icon-xs, 16px);\\n}\\n\\n.btn-sm .btn-icon .icon {\\n  width: var(--semantic-size-icon-xs, 16px);\\n  height: var(--semantic-size-icon-xs, 16px);\\n}\\n\\n.btn-md .btn-icon .icon {\\n  width: var(--semantic-size-icon-sm, 20px);\\n  height: var(--semantic-size-icon-sm, 20px);\\n}\\n\\n.btn-lg .btn-icon .icon {\\n  width: var(--semantic-size-icon-md, 24px);\\n  height: var(--semantic-size-icon-md, 24px);\\n}\\n\\n.btn-xl .btn-icon .icon {\\n  width: var(--semantic-size-icon-lg, 32px);\\n  height: var(--semantic-size-icon-lg, 32px);\\n}\\n\\n/* 아이콘 색상 (버튼 색상과 동일하게) */\\n.btn-primary.btn-filled .btn-icon {\\n  color: var(--semantic-color-primary-oncolor-global, #ffffff);\\n}\\n\\n.btn-primary.btn-outlined .btn-icon,\\n.btn-primary.btn-transparent .btn-icon {\\n  color: var(--semantic-color-primary-foreground-1-rest, #0078d4);\\n}\\n\\n.btn-secondary.btn-filled .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-rest, #323130);\\n}\\n\\n.btn-secondary.btn-outlined .btn-icon,\\n.btn-secondary.btn-transparent .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-rest, #323130);\\n}\\n\\n.btn-cta.btn-filled .btn-icon {\\n  color: var(--semantic-color-cta-oncolor-global, #ffffff);\\n}\\n\\n.btn-cta.btn-outlined .btn-icon,\\n.btn-cta.btn-transparent .btn-icon {\\n  color: var(--semantic-color-cta-foreground-1-rest, #d13438);\\n}\\n\\n/* 비활성화 버튼의 아이콘 */\\n.btn:disabled .btn-icon {\\n  opacity: 0.4;\\n}\\n\\n.btn-icon-left {\\n  margin-right: var(--semantic-spacing-2xs, 2px);\\n}\\n\\n.btn-icon-right {\\n  margin-left: var(--semantic-spacing-2xs, 2px);\\n}\\n\\n/* 아이콘 전용 버튼 */\\n.btn-icon-only {\\n  padding: var(--semantic-spacing-xs, 4px);\\n  aspect-ratio: 1 / 1;\\n}\\n\\n.btn-icon-only.btn-xs {\\n  min-width: var(--semantic-height-global-sm, 24px);\\n  height: var(--semantic-height-global-sm, 24px);\\n}\\n\\n.btn-icon-only.btn-sm {\\n  min-width: var(--semantic-height-global-lg, 32px);\\n  height: var(--semantic-height-global-lg, 32px);\\n}\\n\\n.btn-icon-only.btn-md {\\n  min-width: var(--semantic-height-global-xl, 36px);\\n  height: var(--semantic-height-global-xl, 36px);\\n}\\n\\n.btn-icon-only.btn-lg {\\n  min-width: var(--semantic-height-global-xl, 36px);\\n  height: var(--semantic-height-global-xl, 36px);\\n}\\n\\n.btn-icon-only.btn-xl {\\n  min-width: var(--semantic-height-global-xxl, 40px);\\n  height: var(--semantic-height-global-xxl, 40px);\\n}\\n\\n/* 텍스트 스타일 */\\n.btn-text {\\n  line-height: 1.2;\\n}\\n\\n/* 버튼 텍스트 스타일 */\\n.btn-text {\\n  display: inline-flex;\\n  align-items: center;\\n  line-height: 1;\\n}\\n\\n/* 아이콘 컨테이너 스타일 */\\n.btn-icon {\\n  display: inline-flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: var(--icon-color, currentColor); /* CSS 변수로 아이콘 색상 제어 */\\n}\\n\\n/* 아이콘 간격 */\\n.btn-icon-left {\\n  margin-right: var(--semantic-spacingHor-global-xxs);\\n}\\n\\n.btn-icon-right {\\n  margin-left: var(--semantic-spacingHor-global-xxs);\\n}\\n\\n/* 버튼 종류별 아이콘 색상 */\\n/* Primary */\\n.btn-primary.btn-filled .btn-icon {\\n  color: var(--semantic-color-primary-oncolor-global);\\n}\\n\\n.btn-primary.btn-outlined .btn-icon,\\n.btn-primary.btn-transparent .btn-icon {\\n  color: var(--semantic-color-primary-foreground-1-rest);\\n}\\n\\n.btn-primary.btn-outlined:hover:not(:disabled) .btn-icon,\\n.btn-primary.btn-transparent:hover:not(:disabled) .btn-icon {\\n  color: var(--semantic-color-primary-foreground-1-hovered);\\n}\\n\\n.btn-primary.btn-outlined:active:not(:disabled) .btn-icon,\\n.btn-primary.btn-transparent:active:not(:disabled) .btn-icon {\\n  color: var(--semantic-color-primary-foreground-1-pressed);\\n}\\n\\n.btn-primary.btn-outlined:disabled .btn-icon,\\n.btn-primary.btn-transparent:disabled .btn-icon {\\n  color: var(--semantic-color-primary-foreground-1-disabled);\\n}\\n\\n/* Secondary */\\n.btn-secondary.btn-filled .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-rest);\\n}\\n\\n.btn-secondary.btn-outlined .btn-icon,\\n.btn-secondary.btn-transparent .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-rest);\\n}\\n\\n.btn-secondary.btn-outlined:hover:not(:disabled) .btn-icon,\\n.btn-secondary.btn-transparent:hover:not(:disabled) .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-hovered);\\n}\\n\\n.btn-secondary.btn-outlined:active:not(:disabled) .btn-icon,\\n.btn-secondary.btn-transparent:active:not(:disabled) .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-pressed);\\n}\\n\\n.btn-secondary.btn-outlined:disabled .btn-icon,\\n.btn-secondary.btn-transparent:disabled .btn-icon {\\n  color: var(--semantic-color-secondary-foreground-1-disabled);\\n}\\n\\n/* CTA */\\n.btn-cta.btn-filled .btn-icon {\\n  color: var(--semantic-color-cta-oncolor-global);\\n}\\n\\n.btn-cta.btn-outlined .btn-icon,\\n.btn-cta.btn-transparent .btn-icon {\\n  color: var(--semantic-color-cta-foreground-1-rest);\\n}\\n\\n.btn-cta.btn-outlined:hover:not(:disabled) .btn-icon,\\n.btn-cta.btn-transparent:hover:not(:disabled) .btn-icon {\\n  color: var(--semantic-color-cta-foreground-1-hovered);\\n}\\n\\n.btn-cta.btn-outlined:active:not(:disabled) .btn-icon,\\n.btn-cta.btn-transparent:active:not(:disabled) .btn-icon {\\n  color: var(--semantic-color-cta-foreground-1-pressed);\\n}\\n\\n.btn-cta.btn-outlined:disabled .btn-icon,\\n.btn-cta.btn-transparent:disabled .btn-icon {\\n  color: var(--semantic-color-cta-foreground-1-disabled);\\n}\\n\\n/* 아이콘 크기별 크기 조정 */\\n.btn-icon-only.btn-xs {\\n  padding: var(--semantic-spacingHor-global-xs);\\n}\\n\\n.btn-icon-only.btn-sm {\\n  padding: var(--semantic-spacingHor-global-sm);\\n}\\n\\n.btn-icon-only.btn-md {\\n  padding: var(--semantic-spacingHor-global-sm);\\n}\\n\\n.btn-icon-only.btn-lg {\\n  padding: var(--semantic-spacingHor-global-md);\\n}\\n\\n.btn-icon-only.btn-xl {\\n  padding: var(--semantic-spacingHor-global-md);\\n}\\n\\n/* 추가 레이아웃 스타일 */\\n.btn-full-width {\\n  width: 100%;\\n} \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * 인라인 SVG를 사용하는 Icon 컴포넌트\n * 원본 아이콘을 그대로 불러오며, 상위 컴포넌트에서 크기와 색상을 시멘틱 토큰으로 조절할 수 있습니다.\n * \n * @param {Object} props - 컴포넌트 속성\n * @param {string} props.name - 아이콘 이름 (경로 포함, 예: \"logo/brand-logo\" 또는 \"line icons/home\")\n * @param {string} props.size - 아이콘 크기 (실제 크기는 상위 컴포넌트에서 CSS로 제어)\n * @param {string} props.className - 추가적인 CSS 클래스\n * @param {function} props.onClick - 클릭 이벤트 핸들러\n */\nconst Icon = ({ name, size = 'md', className = '', onClick, ...rest }) => {\n  const [svgContent, setSvgContent] = useState('');\n  const [error, setError] = useState(false);\n\n  // 아이콘 이름 경로 정규화\n  const normalizePath = (iconName) => {\n    // 공백이 있는 경로 처리\n    return iconName.replace(/\\s+/g, '%20');\n  };\n\n  useEffect(() => {\n    // SVG 파일 가져오기\n    const fetchSvg = async () => {\n      try {\n        // 아이콘 경로 정규화\n        const normalizedPath = normalizePath(name);\n        const res = await fetch(`/shared/tokens/icons/${normalizedPath}.svg`);\n        \n        if (!res.ok) {\n          throw new Error(`Failed to fetch icon: ${name}`);\n        }\n        \n        const svgText = await res.text();\n        setSvgContent(svgText);\n      } catch (err) {\n        console.error('Error loading SVG:', err);\n        setError(true);\n      }\n    };\n\n    fetchSvg();\n  }, [name]);\n\n  // SVG 콘텐츠를 React 엘리먼트로 변환\n  const createSvgElement = () => {\n    if (!svgContent) {\n      return null;\n    }\n\n    // viewBox, xmlns 등 메타 속성 유지하면서 width, height 속성 제거\n    const svgElement = document.createElement('div');\n    svgElement.innerHTML = svgContent;\n    const svgNode = svgElement.firstChild;\n    \n    // width, height 속성 추출하고 제거 (CSS로 제어하기 위해)\n    svgNode.removeAttribute('width');\n    svgNode.removeAttribute('height');\n    const viewBox = svgNode.getAttribute('viewBox');\n    \n    // 기존 내용 유지\n    const innerContent = svgNode.innerHTML;\n    \n    // 색상 속성을 현재 색상(currentColor)으로 설정 (CSS 변수로 제어하기 위함)\n    const processedContent = innerContent.replace(/fill=\"[^\"]*\"/g, 'fill=\"currentColor\"');\n    \n    // 최종 SVG HTML 문자열\n    const finalSvg = `<svg viewBox=\"${viewBox}\" xmlns=\"http://www.w3.org/2000/svg\">${processedContent}</svg>`;\n    \n    return finalSvg;\n  };\n\n  // 에러 발생 시 플레이스홀더 표시\n  if (error) {\n    return (\n      <div \n        className={`icon icon-${size} ${className}`} \n        onClick={onClick}\n        {...rest}\n      >\n        ⚠️\n      </div>\n    );\n  }\n\n  return (\n    <span \n      className={`icon icon-${size} ${className}`} \n      onClick={onClick}\n      dangerouslySetInnerHTML={{ __html: createSvgElement() }}\n      {...rest}\n    />\n  );\n};\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired,\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  className: PropTypes.string,\n  onClick: PropTypes.func\n};\n\nexport default Icon; "],"names":[],"sourceRoot":""}