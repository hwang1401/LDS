"use strict";
self["webpackHotUpdatelds"]("system-1-components-primitives-Button-Button-stories",{

/***/ "./design-systems/system-1/components/primitives/Button/Button.stories.jsx":
/*!*********************************************************************************!*\
  !*** ./design-systems/system-1/components/primitives/Button/Button.stories.jsx ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CTA: () => (/* binding */ CTA),
/* harmony export */   Danger: () => (/* binding */ Danger),
/* harmony export */   DisabledButton: () => (/* binding */ DisabledButton),
/* harmony export */   FullWidthButton: () => (/* binding */ FullWidthButton),
/* harmony export */   Ghost: () => (/* binding */ Ghost),
/* harmony export */   IconOnly: () => (/* binding */ IconOnly),
/* harmony export */   LargeButton: () => (/* binding */ LargeButton),
/* harmony export */   OutlineButton: () => (/* binding */ OutlineButton),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Secondary: () => (/* binding */ Secondary),
/* harmony export */   SmallButton: () => (/* binding */ SmallButton),
/* harmony export */   SubtleButton: () => (/* binding */ SubtleButton),
/* harmony export */   WithEndIcon: () => (/* binding */ WithEndIcon),
/* harmony export */   WithStartIcon: () => (/* binding */ WithStartIcon),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index */ "./design-systems/system-1/components/primitives/Button/index.jsx");
Object(function webpackMissingModule() { var e = new Error("Cannot find module '@fluentui/react-icons'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}
var _excluded = ["icon", "iconPosition"];
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function (r) {
      return Object.getOwnPropertyDescriptor(e, r).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {
      _defineProperty(e, r, t[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
    });
  }
  return e;
}
function _defineProperty(e, r, t) {
  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
    value: t,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[r] = t, e;
}
function _toPropertyKey(t) {
  var i = _toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}




// More on how to set up stories at: https://storybook.js.org/docs/writing-stories
var meta = {
  title: 'System-1/Primitives/Button',
  component: _index__WEBPACK_IMPORTED_MODULE_1__["default"],
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: '버튼은 단일 작업이나 이벤트를 트리거하는 컴포넌트입니다. 여러 모양, 크기, 스타일로 제공됩니다.'
      }
    }
  },
  tags: ['autodocs'],
  argTypes: {
    variant: {
      control: 'select',
      options: ['primary', 'secondary', 'cta', 'danger', 'ghost'],
      description: '버튼 종류: primary(주요 동작), secondary(부가 동작), cta(주요 호출 동작), danger(위험 동작), ghost(투명한 배경)',
      table: {
        type: {
          summary: 'string'
        },
        defaultValue: {
          summary: 'primary'
        }
      }
    },
    appearance: {
      control: 'select',
      options: ['filled', 'outline', 'subtle', 'transparent'],
      description: '버튼의 시각적 모양: filled(채워진 배경), outline(외곽선), subtle(약한 배경), transparent(투명)',
      table: {
        type: {
          summary: 'string'
        },
        defaultValue: {
          summary: 'filled'
        }
      }
    },
    size: {
      control: 'select',
      options: ['xs', 'sm', 'md', 'lg', 'xl'],
      description: '버튼 크기',
      table: {
        type: {
          summary: 'string'
        },
        defaultValue: {
          summary: 'md'
        }
      }
    },
    iconPosition: {
      control: 'select',
      options: ['start', 'end', 'only'],
      description: '아이콘 위치: start(시작 부분), end(끝 부분), only(아이콘만)',
      table: {
        type: {
          summary: 'string'
        },
        defaultValue: {
          summary: 'undefined'
        }
      }
    },
    icon: {
      control: 'select',
      options: ['add', 'arrow', 'dismiss', 'none'],
      description: '버튼에 표시할 아이콘',
      table: {
        type: {
          summary: 'string'
        },
        defaultValue: {
          summary: 'none'
        }
      }
    },
    fullWidth: {
      control: 'boolean',
      description: '전체 너비 적용 여부',
      table: {
        type: {
          summary: 'boolean'
        },
        defaultValue: {
          summary: false
        }
      }
    },
    disabled: {
      control: 'boolean',
      description: '비활성화 여부',
      table: {
        type: {
          summary: 'boolean'
        },
        defaultValue: {
          summary: false
        }
      }
    },
    onClick: {
      action: 'clicked',
      description: '클릭 이벤트 핸들러',
      table: {
        disable: true
      }
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);

// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args

// 아이콘 매핑 함수
var getIcon = function getIcon(iconName) {
  switch (iconName) {
    case 'add':
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Object(function webpackMissingModule() { var e = new Error("Cannot find module '@fluentui/react-icons'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), null);
    case 'arrow':
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Object(function webpackMissingModule() { var e = new Error("Cannot find module '@fluentui/react-icons'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), null);
    case 'dismiss':
      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Object(function webpackMissingModule() { var e = new Error("Cannot find module '@fluentui/react-icons'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()), null);
    default:
      return null;
  }
};

// 스토리북에서 아이콘 매핑 처리
var Template = function Template(args) {
  var icon = args.icon,
    iconPosition = args.iconPosition,
    rest = _objectWithoutProperties(args, _excluded);
  var iconElement = getIcon(icon);

  // iconPosition과 icon 값을 Button 컴포넌트에서 사용하는 prop으로 변환
  var buttonProps = _objectSpread(_objectSpread({}, rest), {}, {
    style: args.appearance // 기존 Button 컴포넌트는 style prop을 사용하므로 appearance를 style로 변환
  });
  if (iconElement) {
    if (iconPosition === 'start') {
      buttonProps.leftIcon = true;
    } else if (iconPosition === 'end') {
      buttonProps.rightIcon = true;
    } else if (iconPosition === 'only') {
      buttonProps.iconOnly = true;
    }
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_index__WEBPACK_IMPORTED_MODULE_1__["default"], buttonProps, args.children);
};

// 기본 버튼 예시
var Primary = Template.bind({});
Primary.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: 'Primary 버튼'
};
var Secondary = Template.bind({});
Secondary.args = {
  variant: 'secondary',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: 'Secondary 버튼'
};
var CTA = Template.bind({});
CTA.args = {
  variant: 'cta',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: 'CTA 버튼'
};
var Danger = Template.bind({});
Danger.args = {
  variant: 'danger',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: '삭제하기'
};
var Ghost = Template.bind({});
Ghost.args = {
  variant: 'ghost',
  appearance: 'transparent',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: 'Ghost 버튼'
};
var WithStartIcon = Template.bind({});
WithStartIcon.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'add',
  iconPosition: 'start',
  children: '시작 아이콘'
};
var WithEndIcon = Template.bind({});
WithEndIcon.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'arrow',
  iconPosition: 'end',
  children: '끝 아이콘'
};
var IconOnly = Template.bind({});
IconOnly.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'dismiss',
  iconPosition: 'only',
  children: '아이콘만'
};
var OutlineButton = Template.bind({});
OutlineButton.args = {
  variant: 'primary',
  appearance: 'outline',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: '외곽선 버튼'
};
var SubtleButton = Template.bind({});
SubtleButton.args = {
  variant: 'secondary',
  appearance: 'subtle',
  size: 'md',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: '약한 배경 버튼'
};
var LargeButton = Template.bind({});
LargeButton.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'lg',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: '큰 버튼'
};
var SmallButton = Template.bind({});
SmallButton.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'sm',
  fullWidth: false,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: '작은 버튼'
};
var FullWidthButton = Template.bind({});
FullWidthButton.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'md',
  fullWidth: true,
  disabled: false,
  icon: 'none',
  iconPosition: undefined,
  children: '전체 너비 버튼'
};
var DisabledButton = Template.bind({});
DisabledButton.args = {
  variant: 'primary',
  appearance: 'filled',
  size: 'md',
  fullWidth: false,
  disabled: true,
  icon: 'none',
  iconPosition: undefined,
  children: '비활성화 버튼'
};
;
const __namedExportsOrder = ["Primary", "Secondary", "CTA", "Danger", "Ghost", "WithStartIcon", "WithEndIcon", "IconOnly", "OutlineButton", "SubtleButton", "LargeButton", "SmallButton", "FullWidthButton", "DisabledButton"];
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
CTA.parameters = {
  ...CTA.parameters,
  docs: {
    ...CTA.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...CTA.parameters?.docs?.source
    }
  }
};
Danger.parameters = {
  ...Danger.parameters,
  docs: {
    ...Danger.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...Danger.parameters?.docs?.source
    }
  }
};
Ghost.parameters = {
  ...Ghost.parameters,
  docs: {
    ...Ghost.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...Ghost.parameters?.docs?.source
    }
  }
};
WithStartIcon.parameters = {
  ...WithStartIcon.parameters,
  docs: {
    ...WithStartIcon.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...WithStartIcon.parameters?.docs?.source
    }
  }
};
WithEndIcon.parameters = {
  ...WithEndIcon.parameters,
  docs: {
    ...WithEndIcon.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...WithEndIcon.parameters?.docs?.source
    }
  }
};
IconOnly.parameters = {
  ...IconOnly.parameters,
  docs: {
    ...IconOnly.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...IconOnly.parameters?.docs?.source
    }
  }
};
OutlineButton.parameters = {
  ...OutlineButton.parameters,
  docs: {
    ...OutlineButton.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...OutlineButton.parameters?.docs?.source
    }
  }
};
SubtleButton.parameters = {
  ...SubtleButton.parameters,
  docs: {
    ...SubtleButton.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...SubtleButton.parameters?.docs?.source
    }
  }
};
LargeButton.parameters = {
  ...LargeButton.parameters,
  docs: {
    ...LargeButton.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...LargeButton.parameters?.docs?.source
    }
  }
};
SmallButton.parameters = {
  ...SmallButton.parameters,
  docs: {
    ...SmallButton.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...SmallButton.parameters?.docs?.source
    }
  }
};
FullWidthButton.parameters = {
  ...FullWidthButton.parameters,
  docs: {
    ...FullWidthButton.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...FullWidthButton.parameters?.docs?.source
    }
  }
};
DisabledButton.parameters = {
  ...DisabledButton.parameters,
  docs: {
    ...DisabledButton.parameters?.docs,
    source: {
      originalSource: "args => {\n  const {\n    icon,\n    iconPosition,\n    ...rest\n  } = args;\n  const iconElement = getIcon(icon);\n\n  // iconPosition\uACFC icon \uAC12\uC744 Button \uCEF4\uD3EC\uB10C\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD558\uB294 prop\uC73C\uB85C \uBCC0\uD658\n  const buttonProps = {\n    ...rest,\n    style: args.appearance // \uAE30\uC874 Button \uCEF4\uD3EC\uB10C\uD2B8\uB294 style prop\uC744 \uC0AC\uC6A9\uD558\uBBC0\uB85C appearance\uB97C style\uB85C \uBCC0\uD658\n  };\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n  return <Button {...buttonProps}>{args.children}</Button>;\n}",
      ...DisabledButton.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=system-1-components-primitives-Button-Button-stories.75ab225883efacf67fd4.hot-update.js.map