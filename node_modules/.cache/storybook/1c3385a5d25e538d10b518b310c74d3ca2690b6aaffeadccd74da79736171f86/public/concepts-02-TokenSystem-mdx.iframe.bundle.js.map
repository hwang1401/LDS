{"version":3,"file":"concepts-02-TokenSystem-mdx.iframe.bundle.js","mappingshTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lds/./docs/stories/concepts/02-TokenSystem.mdx","webpack://lds/./node_modules/@mdx-js/react/lib/index.js","webpack://lds/./node_modules/@storybook/blocks/dist/ sync","webpack://lds/./node_modules/@storybook/core/dist/components/ sync","webpack://lds/./node_modules/@storybook/core/dist/theming/ sync"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"C:\\\\Users\\\\User\\\\Desktop\\\\Web파트\\\\LDS\\\\node_modules\\\\@storybook\\\\addon-docs\\\\dist\\\\shims\\\\mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      title: \"Concepts/02. 토큰 시스템\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"토큰-시스템\",\n      children: \"토큰 시스템\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"토큰-철학\",\n      children: \"토큰 철학\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"디자인 토큰은 두 가지 계층으로 구분됩니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"파운데이션 토큰\"\n        }), \": 순수한 디자인 값 (색상 코드, 픽셀 값 등)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"시멘틱 토큰\"\n        }), \": 실제 사용 목적과 의미가 부여된 토큰 (파운데이션 토큰 참조)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"이러한 분리는 디자인 시스템의 일관성과 확장성을 보장합니다. 파운데이션 토큰이 변경되면 이를 참조하는 모든 시멘틱 토큰이 자동으로 업데이트됩니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"파운데이션-토큰\",\n      children: \"파운데이션 토큰\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"파운데이션-토큰-원칙\",\n      children: \"파운데이션 토큰 원칙\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"의미를 부여하지 않은 순수한 디자인 값만 정의\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"명확한 네이밍 규칙 준수: \", _jsx(_components.code, {\n          children: \"카테고리.속성.변형.값\"\n        })]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"모든 디자인 시스템이 공유하는 공통 값\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"파운데이션-토큰-카테고리\",\n      children: \"파운데이션 토큰 카테고리\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"color\"\n        }), \": 색상 팔레트\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"typography\"\n        }), \": 폰트 패밀리, 사이즈, 웨이트\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"spacing\"\n        }), \": 여백 및 간격\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"radius\"\n        }), \": 모서리 반경\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"size\"\n        }), \": 크기 값\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"shadow\"\n        }), \": 그림자 효과\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"opacity\"\n        }), \": 투명도\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"파운데이션-토큰-예시\",\n      children: \"파운데이션 토큰 예시\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\r\\n  \\\"foundation\\\": {\\r\\n    \\\"color\\\": {\\r\\n      \\\"blue\\\": {\\r\\n        \\\"light\\\": {\\r\\n          \\\"20\\\": \\\"#E3F2FD\\\",\\r\\n          \\\"40\\\": \\\"#BBDEFB\\\",\\r\\n          \\\"50\\\": \\\"#90CAF9\\\",\\r\\n          \\\"60\\\": \\\"#64B5F6\\\",\\r\\n          \\\"80\\\": \\\"#42A5F5\\\",\\r\\n          \\\"100\\\": \\\"#2196F3\\\"\\r\\n        }\\r\\n      },\\r\\n      \\\"grey\\\": {\\r\\n        \\\"light\\\": {\\r\\n          \\\"0\\\": \\\"#FFFFFF\\\",\\r\\n          \\\"20\\\": \\\"#F5F5F5\\\",\\r\\n          \\\"40\\\": \\\"#EEEEEE\\\",\\r\\n          \\\"60\\\": \\\"#E0E0E0\\\",\\r\\n          \\\"80\\\": \\\"#BDBDBD\\\",\\r\\n          \\\"100\\\": \\\"#9E9E9E\\\"\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    \\\"typography\\\": {\\r\\n      \\\"fontFamily\\\": {\\r\\n        \\\"base\\\": \\\"Pretendard, sans-serif\\\"\\r\\n      },\\r\\n      \\\"fontSize\\\": {\\r\\n        \\\"120\\\": \\\"12px\\\",\\r\\n        \\\"140\\\": \\\"14px\\\",\\r\\n        \\\"160\\\": \\\"16px\\\",\\r\\n        \\\"240\\\": \\\"24px\\\"\\r\\n      },\\r\\n      \\\"fontWeight\\\": {\\r\\n        \\\"400\\\": \\\"400\\\",\\r\\n        \\\"500\\\": \\\"500\\\",\\r\\n        \\\"600\\\": \\\"600\\\",\\r\\n        \\\"700\\\": \\\"700\\\"\\r\\n      }\\r\\n    },\\r\\n    \\\"radius\\\": {\\r\\n      \\\"0\\\": \\\"0px\\\",\\r\\n      \\\"20\\\": \\\"2px\\\",\\r\\n      \\\"40\\\": \\\"4px\\\",\\r\\n      \\\"60\\\": \\\"6px\\\",\\r\\n      \\\"80\\\": \\\"8px\\\"\\r\\n    }\\r\\n  }\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"시멘틱-토큰\",\n      children: \"시멘틱 토큰\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"시멘틱-토큰-원칙\",\n      children: \"시멘틱 토큰 원칙\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"실제 사용 목적과 의미를 부여한 토큰\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"파운데이션 토큰만 참조하여 정의\"\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"하드코딩된 값(#FFFFFF, 10px 등) 직접 입력 절대 금지\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"파운데이션 토큰에 존재하지 않는 값은 참조 불가\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"필요한 값이 파운데이션 토큰에 없다면, 먼저 파운데이션 토큰을 업데이트\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"각 디자인 시스템마다 독립적으로 정의\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"컴포넌트와 패턴에서 직접 사용되는 토큰\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"시멘틱-컬러-토큰의-4단계-계층-구조\",\n      children: \"시멘틱 컬러 토큰의 4단계 계층 구조\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"시멘틱 컬러 토큰은 다음과 같은 4단계 계층 구조를 따릅니다:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"상황.용도.위계.상태\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"상황(Context)\"\n          }), \": 사용되는 맥락\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"neutral\"\n            }), \": 중립적인 색상들\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"primary\"\n            }), \": 브랜드 아이덴티티를 나타내는 주요 색상\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"status\"\n            }), \": 성공, 경고, 오류, 정보 등의 상태를 표현하는 색상\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"용도(Usage)\"\n          }), \": 실제 활용 목적\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"background\"\n            }), \": 배경 색상\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"foreground\"\n            }), \": 전경 색상 (주로 텍스트)\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"stroke\"\n            }), \": 테두리 및 구분선\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"위계(Hierarchy)\"\n          }), \": 중요도 수준\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"1\"\n            }), \": 가장 강조되는 수준\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"2\"\n            }), \": 중간 수준의 강조\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"3\"\n            }), \": 가장 낮은 수준의 강조\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"상태(State)\"\n          }), \": CSS pseudo-class 기반 상태\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"rest\"\n            }), \": 기본 상태\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"hovered\"\n            }), \": 마우스 오버 상태\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"pressed\"\n            }), \": 눌린 상태\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"selected\"\n            }), \": 선택된 상태\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"disabled\"\n            }), \": 비활성화 상태\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"focused\"\n            }), \": 포커스 상태\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"시멘틱-토큰-예시\",\n      children: \"시멘틱 토큰 예시\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\r\\n  \\\"semantic\\\": {\\r\\n    \\\"color\\\": {\\r\\n      \\\"neutral\\\": {\\r\\n        \\\"background\\\": {\\r\\n          \\\"1\\\": {\\r\\n            \\\"rest\\\":     \\\"{foundation.color.grey.light.20}\\\",\\r\\n            \\\"hovered\\\":  \\\"{foundation.color.grey.light.40}\\\",\\r\\n            \\\"pressed\\\":  \\\"{foundation.color.grey.light.60}\\\"\\r\\n          }\\r\\n        },\\r\\n        \\\"foreground\\\": {\\r\\n          \\\"1\\\": {\\r\\n            \\\"rest\\\":     \\\"{foundation.color.grey.light.100}\\\",\\r\\n            \\\"disabled\\\": \\\"{foundation.color.grey.light.50}\\\"\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      \\\"primary\\\": {\\r\\n        \\\"background\\\": {\\r\\n          \\\"1\\\": {\\r\\n            \\\"rest\\\":     \\\"{foundation.color.blue.light.50}\\\",\\r\\n            \\\"hovered\\\":  \\\"{foundation.color.blue.light.60}\\\",\\r\\n            \\\"pressed\\\":  \\\"{foundation.color.blue.light.40}\\\"\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"토큰-네이밍-규칙\",\n      children: \"토큰 네이밍 규칙\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"모든 토큰 이름은 일관된 규칙을 따라야 합니다:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"파운데이션 토큰\"\n          }), \": \", _jsx(_components.code, {\n            children: \"카테고리.속성.변형.값\"\n          })]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"예: \", _jsx(_components.code, {\n              children: \"foundation.color.blue.light.50\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"시멘틱 토큰\"\n          }), \": \", _jsx(_components.code, {\n            children: \"카테고리.상황.용도.위계.상태\"\n          })]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [\"예: \", _jsx(_components.code, {\n              children: \"semantic.color.primary.background.1.rest\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"모든 시맨틱 컬러 토큰은 항상 4단계 구조(상황.용도.위계.상태)를 모두 포함해야 합니다.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"토큰-변환-프로세스\",\n      children: \"토큰 변환 프로세스\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"토큰 JSON 파일은 Style Dictionary를 통해 CSS 변수로 변환됩니다:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"파운데이션 토큰과 시멘틱 토큰이 JSON 형식으로 정의됨\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Style Dictionary가 이 JSON 파일을 읽고 CSS 변수로 변환\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"변환된 CSS 파일은 각 디자인 시스템의 styles 폴더에 저장됨\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"컴포넌트는 이 CSS 변수를 사용하여 스타일링\"\n      }), \"\\n\"]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/blocks/dist sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/core/dist/theming sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}