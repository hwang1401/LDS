{"version":3,"file":"design-systems_system-1_components_primitives_Button_index_jsx.e481c2aa8cbc6e38fa0f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lds/./shared/components/Icon/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Icon 컴포넌트 - Google Material Design 가이드라인을 따르는 SVG 아이콘을 표시합니다.\r\n * \r\n * @param {Object} props - 컴포넌트 속성\r\n * @param {string} props.name - 아이콘 이름 (경로 포함, 예: \"logo/brand-logo\" 또는 \"line-icons/home\")\r\n * @param {string} props.size - 아이콘 크기 (xs, sm, md, lg, xl)\r\n * @param {string} props.color - 아이콘 색상 (기본 색상 또는 CSS 색상값)\r\n * @param {function} props.onClick - 클릭 이벤트 핸들러\r\n * @param {string} props.className - 추가적인 CSS 클래스\r\n */\r\nconst Icon = ({ name, size = 'md', color, onClick, className, ...rest }) => {\r\n  // CSS 변수를 통해 아이콘 크기를 가져옵니다.\r\n  // 이렇게 하면 foundation token에 정의된 값을 상속받습니다.\r\n  const getIconSize = () => {\r\n    // CSS 변수를 사용하지만, 숫자 값으로 변환해야 합니다.\r\n    const sizeVarName = `var(--semantic-size-${size})`;\r\n    \r\n    // 기본 크기를 제공합니다 (CSS 변수를 가져올 수 없는 경우를 대비)\r\n    const defaultSizes = {\r\n      xs: '14px',\r\n      sm: '16px',\r\n      md: '18px',\r\n      lg: '24px',\r\n      xl: '32px'\r\n    };\r\n    \r\n    return defaultSizes[size] || defaultSizes.md;\r\n  };\r\n\r\n  const iconSize = getIconSize();\r\n  \r\n  // SVG를 직접 렌더링하는 대신 IMG 태그로 SVG 파일 참조\r\n  return (\r\n    <div \r\n      onClick={onClick}\r\n      className={`icon icon-${size} ${className || ''}`}\r\n      style={{\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: iconSize,\r\n        height: iconSize\r\n      }}\r\n      {...rest}\r\n    >\r\n      <img\r\n        src={`/shared/tokens/icons/${name}.svg`}\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        alt=\"\"\r\n        style={{\r\n          display: 'block',\r\n          width: '100%',\r\n          height: '100%',\r\n          filter: color ? generateColorFilter(color) : 'none'\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// 색상 필터 생성 함수\r\nconst generateColorFilter = (color) => {\r\n  if (!color) return 'none';\r\n  \r\n  // 특정 색상에 대한 필터 생성\r\n  const colorMap = {\r\n    'white': 'brightness(0) invert(1)',\r\n    'black': 'brightness(0) invert(0)',\r\n    'primary': 'invert(44%) sepia(93%) saturate(1937%) hue-rotate(194deg) brightness(98%) contrast(101%)',\r\n    'secondary': 'invert(42%) sepia(0%) saturate(0%) hue-rotate(222deg) brightness(95%) contrast(95%)',\r\n    'cta': 'invert(58%) sepia(79%) saturate(458%) hue-rotate(85deg) brightness(96%) contrast(87%)',\r\n    'error': 'invert(38%) sepia(95%) saturate(7471%) hue-rotate(353deg) brightness(101%) contrast(105%)',\r\n    'warning': 'invert(88%) sepia(33%) saturate(7500%) hue-rotate(359deg) brightness(101%) contrast(103%)',\r\n    'success': 'invert(58%) sepia(79%) saturate(458%) hue-rotate(85deg) brightness(96%) contrast(87%)',\r\n    'info': 'invert(44%) sepia(93%) saturate(1937%) hue-rotate(194deg) brightness(98%) contrast(101%)'\r\n  };\r\n  \r\n  // inherit은 현재 텍스트 색상을 따라야 하므로 검은색 기본 아이콘에 \r\n  // CSS의 currentColor를 적용하기 위한 필터\r\n  if (color === 'inherit') {\r\n    return 'brightness(0) invert(0.5) sepia(1) saturate(5) hue-rotate(175deg)';\r\n  }\r\n  \r\n  return colorMap[color] || 'none';\r\n};\r\n\r\nIcon.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Icon; "],"names":[],"sourceRoot":""}