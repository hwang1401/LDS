{"version":3,"file":"system-1-components-primitives-Button-Button-stories.75ab225883efacf67fd4.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://lds/./design-systems/system-1/components/primitives/Button/Button.stories.jsx"],"sourcesContent":["import React from 'react';\nimport Button from './index';\nimport { Add24Regular, ArrowRight24Regular, Dismiss24Regular } from '@fluentui/react-icons';\n\n// More on how to set up stories at: https://storybook.js.org/docs/writing-stories\nconst meta = {\n  title: 'System-1/Primitives/Button',\n  component: Button,\n  parameters: {\n    layout: 'centered',\n    docs: {\n      description: {\n        component: '버튼은 단일 작업이나 이벤트를 트리거하는 컴포넌트입니다. 여러 모양, 크기, 스타일로 제공됩니다.'\n      }\n    }\n  },\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['primary', 'secondary', 'cta', 'danger', 'ghost'],\n      description: '버튼 종류: primary(주요 동작), secondary(부가 동작), cta(주요 호출 동작), danger(위험 동작), ghost(투명한 배경)',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'primary' },\n      }\n    },\n    appearance: {\n      control: 'select',\n      options: ['filled', 'outline', 'subtle', 'transparent'],\n      description: '버튼의 시각적 모양: filled(채워진 배경), outline(외곽선), subtle(약한 배경), transparent(투명)',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'filled' },\n      }\n    },\n    size: {\n      control: 'select',\n      options: ['xs', 'sm', 'md', 'lg', 'xl'],\n      description: '버튼 크기',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'md' },\n      }\n    },\n    iconPosition: {\n      control: 'select',\n      options: ['start', 'end', 'only'],\n      description: '아이콘 위치: start(시작 부분), end(끝 부분), only(아이콘만)',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'undefined' },\n      }\n    },\n    icon: {\n      control: 'select',\n      options: ['add', 'arrow', 'dismiss', 'none'],\n      description: '버튼에 표시할 아이콘',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: 'none' },\n      }\n    },\n    fullWidth: {\n      control: 'boolean',\n      description: '전체 너비 적용 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false },\n      }\n    },\n    disabled: {\n      control: 'boolean',\n      description: '비활성화 여부',\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false },\n      }\n    },\n    onClick: { \n      action: 'clicked',\n      description: '클릭 이벤트 핸들러',\n      table: { \n        disable: true \n      }\n    }\n  }\n};\n\nexport default meta;\n\n// More on writing stories with args: https://storybook.js.org/docs/writing-stories/args\n\n// 아이콘 매핑 함수\nconst getIcon = (iconName) => {\n  switch(iconName) {\n    case 'add': return <Add24Regular />;\n    case 'arrow': return <ArrowRight24Regular />;\n    case 'dismiss': return <Dismiss24Regular />;\n    default: return null;\n  }\n};\n\n// 스토리북에서 아이콘 매핑 처리\nconst Template = (args) => {\n  const { icon, iconPosition, ...rest } = args;\n  const iconElement = getIcon(icon);\n  \n  // iconPosition과 icon 값을 Button 컴포넌트에서 사용하는 prop으로 변환\n  const buttonProps = {\n    ...rest,\n    style: args.appearance, // 기존 Button 컴포넌트는 style prop을 사용하므로 appearance를 style로 변환\n  };\n\n  if (iconElement) {\n    if (iconPosition === 'start') {\n      buttonProps.leftIcon = true;\n    } else if (iconPosition === 'end') {\n      buttonProps.rightIcon = true;\n    } else if (iconPosition === 'only') {\n      buttonProps.iconOnly = true;\n    }\n  }\n\n  return <Button {...buttonProps}>{args.children}</Button>;\n};\n\n// 기본 버튼 예시\nexport const Primary = Template.bind({});\nPrimary.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: 'Primary 버튼'\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  variant: 'secondary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: 'Secondary 버튼'\n};\n\nexport const CTA = Template.bind({});\nCTA.args = {\n  variant: 'cta',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: 'CTA 버튼'\n};\n\nexport const Danger = Template.bind({});\nDanger.args = {\n  variant: 'danger',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '삭제하기'\n};\n\nexport const Ghost = Template.bind({});\nGhost.args = {\n  variant: 'ghost',\n  appearance: 'transparent',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: 'Ghost 버튼'\n};\n\nexport const WithStartIcon = Template.bind({});\nWithStartIcon.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'add',\n  iconPosition: 'start',\n  children: '시작 아이콘'\n};\n\nexport const WithEndIcon = Template.bind({});\nWithEndIcon.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'arrow',\n  iconPosition: 'end',\n  children: '끝 아이콘'\n};\n\nexport const IconOnly = Template.bind({});\nIconOnly.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'dismiss',\n  iconPosition: 'only',\n  children: '아이콘만'\n};\n\nexport const OutlineButton = Template.bind({});\nOutlineButton.args = {\n  variant: 'primary',\n  appearance: 'outline',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '외곽선 버튼'\n};\n\nexport const SubtleButton = Template.bind({});\nSubtleButton.args = {\n  variant: 'secondary',\n  appearance: 'subtle',\n  size: 'md',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '약한 배경 버튼'\n};\n\nexport const LargeButton = Template.bind({});\nLargeButton.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'lg',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '큰 버튼'\n};\n\nexport const SmallButton = Template.bind({});\nSmallButton.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'sm',\n  fullWidth: false,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '작은 버튼'\n};\n\nexport const FullWidthButton = Template.bind({});\nFullWidthButton.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: true,\n  disabled: false,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '전체 너비 버튼'\n};\n\nexport const DisabledButton = Template.bind({});\nDisabledButton.args = {\n  variant: 'primary',\n  appearance: 'filled',\n  size: 'md',\n  fullWidth: false,\n  disabled: true,\n  icon: 'none',\n  iconPosition: undefined,\n  children: '비활성화 버튼'\n};\n\n"],"names":[],"sourceRoot":""}