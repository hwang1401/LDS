"use strict";
self["webpackHotUpdatelds"]("design-systems_system-1_components_primitives_Button_index_jsx",{

/***/ "./design-systems/system-1/components/primitives/Button/index.jsx":
/*!************************************************************************!*\
  !*** ./design-systems/system-1/components/primitives/Button/index.jsx ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared/components/Icon */ "./shared/components/Icon/index.jsx");
/* harmony import */ var _Button_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button.css */ "./design-systems/system-1/components/primitives/Button/Button.css");
var _excluded = ["variant", "style", "size", "fullWidth", "disabled", "leftIcon", "rightIcon", "iconOnly", "children", "onClick"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}





/**
 * 버튼 컴포넌트
 * @param {object} props - 컴포넌트 속성
 * @param {'filled'|'outlined'|'transparent'} props.style - 버튼 스타일
 * @param {'xs'|'sm'|'md'|'lg'|'xl'} props.size - 버튼 크기
 * @param {boolean} props.fullWidth - 전체 너비 적용 여부
 * @param {boolean} props.disabled - 비활성화 여부
 * @param {boolean} props.leftIcon - 왼쪽 아이콘 표시 여부
 * @param {boolean} props.rightIcon - 오른쪽 아이콘 표시 여부
 * @param {boolean} props.iconOnly - 아이콘만 표시 여부
 * @param {React.ReactNode} props.children - 버튼 내용
 * @param {function} props.onClick - 클릭 이벤트 핸들러
 */
var Button = function Button(_ref) {
  var _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,
    _ref$style = _ref.style,
    style = _ref$style === void 0 ? 'filled' : _ref$style,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$fullWidth = _ref.fullWidth,
    fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$leftIcon = _ref.leftIcon,
    leftIcon = _ref$leftIcon === void 0 ? false : _ref$leftIcon,
    _ref$rightIcon = _ref.rightIcon,
    rightIcon = _ref$rightIcon === void 0 ? false : _ref$rightIcon,
    _ref$iconOnly = _ref.iconOnly,
    iconOnly = _ref$iconOnly === void 0 ? false : _ref$iconOnly,
    children = _ref.children,
    onClick = _ref.onClick,
    rest = _objectWithoutProperties(_ref, _excluded);
  var buttonClasses = ['btn', "btn-".concat(variant), "btn-".concat(style), "btn-".concat(size), fullWidth ? 'btn-full-width' : '', iconOnly ? 'btn-icon-only' : ''].filter(Boolean).join(' ');

  // 아이콘 크기는 버튼 크기보다 한 단계 작게 설정
  var getIconSize = function getIconSize(btnSize) {
    var sizeMap = {
      xs: 'xs',
      sm: 'xs',
      md: 'sm',
      lg: 'md',
      xl: 'lg'
    };
    return sizeMap[btnSize] || 'sm';
  };

  // 버튼 타입에 따른 기본 아이콘 선택
  var getDefaultIcon = function getDefaultIcon(type) {
    var iconMap = {
      leftIcon: {
        primary: 'line-icons/Arrow/Chevron/up',
        secondary: 'line-icons/Arrow/Chevron/up',
        cta: 'line-icons/Arrow/Chevron/up'
      },
      rightIcon: {
        primary: 'line-icons/Arrow/Chevron/right',
        secondary: 'line-icons/Arrow/Chevron/right',
        cta: 'line-icons/Arrow/Chevron/right'
      },
      iconOnly: {
        primary: 'line-icons/Arrow/Chevron/right',
        secondary: 'line-icons/Arrow/Chevron/up',
        cta: 'line-icons/Arrow/Chevron/up'
      }
    };
    return iconMap[type][variant] || iconMap[type].primary;
  };

  // 버튼 상태와 스타일에 따른 시멘틱 토큰 색상 반환
  var getSemanticColor = function getSemanticColor() {
    // filled 스타일은 oncolor 토큰 사용
    if (style === 'filled') {
      return "var(--semantic-color-".concat(variant, "-oncolor-global)");
    }
    // outlined 또는 transparent 스타일은 foreground 토큰 사용
    else {
      if (disabled) {
        return "var(--semantic-color-".concat(variant, "-foreground-1-disabled)");
      }
      return "var(--semantic-color-".concat(variant, "-foreground-1-rest)");
    }
  };
  var iconSize = getIconSize(size);
  var iconColor = getSemanticColor();

  // 아이콘 CSS 클래스 생성
  var getIconClassName = function getIconClassName(position) {
    return "btn-icon ".concat(position ? "btn-icon-".concat(position) : '', " btn-icon-").concat(iconSize);
  };

  // iconOnly인 경우 버튼 내용은 아이콘만 표시
  if (iconOnly) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
      className: buttonClasses,
      disabled: disabled,
      onClick: onClick
    }, rest, {
      "aria-label": typeof children === 'string' ? children : 'Icon button'
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
      className: getIconClassName(),
      style: {
        '--icon-color': iconColor
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], {
      name: getDefaultIcon('iconOnly'),
      size: iconSize
    })));
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
    className: buttonClasses,
    disabled: disabled,
    onClick: onClick
  }, rest), leftIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: getIconClassName('left'),
    style: {
      '--icon-color': iconColor
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], {
    name: getDefaultIcon('leftIcon'),
    size: iconSize
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: "btn-text"
  }, children), rightIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: getIconClassName('right'),
    style: {
      '--icon-color': iconColor
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], {
    name: getDefaultIcon('rightIcon'),
    size: iconSize
  })));
};
Button.propTypes = {
  style: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf(['filled', 'outlined', 'transparent']),
  size: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']),
  fullWidth: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  leftIcon: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  rightIcon: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  iconOnly: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  children: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().node),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func)
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
;
Button.__docgenInfo = {
  "description": "버튼 컴포넌트\n@param {object} props - 컴포넌트 속성\n@param {'filled'|'outlined'|'transparent'} props.style - 버튼 스타일\n@param {'xs'|'sm'|'md'|'lg'|'xl'} props.size - 버튼 크기\n@param {boolean} props.fullWidth - 전체 너비 적용 여부\n@param {boolean} props.disabled - 비활성화 여부\n@param {boolean} props.leftIcon - 왼쪽 아이콘 표시 여부\n@param {boolean} props.rightIcon - 오른쪽 아이콘 표시 여부\n@param {boolean} props.iconOnly - 아이콘만 표시 여부\n@param {React.ReactNode} props.children - 버튼 내용\n@param {function} props.onClick - 클릭 이벤트 핸들러",
  "methods": [],
  "displayName": "Button",
  "props": {
    "variant": {
      "defaultValue": {
        "value": "'primary'",
        "computed": false
      },
      "required": false
    },
    "style": {
      "defaultValue": {
        "value": "'filled'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'filled'",
          "computed": false
        }, {
          "value": "'outlined'",
          "computed": false
        }, {
          "value": "'transparent'",
          "computed": false
        }]
      },
      "required": false
    },
    "size": {
      "defaultValue": {
        "value": "'md'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'xs'",
          "computed": false
        }, {
          "value": "'sm'",
          "computed": false
        }, {
          "value": "'md'",
          "computed": false
        }, {
          "value": "'lg'",
          "computed": false
        }, {
          "value": "'xl'",
          "computed": false
        }]
      },
      "required": false
    },
    "fullWidth": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "disabled": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "leftIcon": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "rightIcon": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "iconOnly": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "children": {
      "description": "",
      "type": {
        "name": "node"
      },
      "required": false
    },
    "onClick": {
      "description": "",
      "type": {
        "name": "func"
      },
      "required": false
    }
  }
};

/***/ })

});
//# sourceMappingURL=design-systems_system-1_components_primitives_Button_index_jsx.94cf2f5e2d16680156d4.hot-update.js.map