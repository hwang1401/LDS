"use strict";
self["webpackHotUpdatelds"]("design-systems_system-1_components_primitives_Button_index_jsx",{

/***/ "./design-systems/system-1/components/primitives/Button/index.jsx":
/*!************************************************************************!*\
  !*** ./design-systems/system-1/components/primitives/Button/index.jsx ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../shared/components/Icon */ "./shared/components/Icon/index.jsx");
/* harmony import */ var _Button_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Button.css */ "./design-systems/system-1/components/primitives/Button/Button.css");
var _excluded = ["variant", "style", "size", "fullWidth", "disabled", "leftIcon", "rightIcon", "iconOnly", "children", "onClick"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}





/**
 * 버튼 컴포넌트
 * @param {object} props - 컴포넌트 속성
 * @param {'filled'|'outlined'|'transparent'} props.style - 버튼 스타일
 * @param {'xs'|'sm'|'md'|'lg'|'xl'} props.size - 버튼 크기
 * @param {boolean} props.fullWidth - 전체 너비 적용 여부
 * @param {boolean} props.disabled - 비활성화 여부
 * @param {boolean} props.leftIcon - 왼쪽 아이콘 표시 여부
 * @param {boolean} props.rightIcon - 오른쪽 아이콘 표시 여부
 * @param {boolean} props.iconOnly - 아이콘만 표시 여부
 * @param {React.ReactNode} props.children - 버튼 내용
 * @param {function} props.onClick - 클릭 이벤트 핸들러
 */
var Button = function Button(_ref) {
  var _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? 'primary' : _ref$variant,
    _ref$style = _ref.style,
    style = _ref$style === void 0 ? 'filled' : _ref$style,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    _ref$fullWidth = _ref.fullWidth,
    fullWidth = _ref$fullWidth === void 0 ? false : _ref$fullWidth,
    _ref$disabled = _ref.disabled,
    disabled = _ref$disabled === void 0 ? false : _ref$disabled,
    _ref$leftIcon = _ref.leftIcon,
    leftIcon = _ref$leftIcon === void 0 ? false : _ref$leftIcon,
    _ref$rightIcon = _ref.rightIcon,
    rightIcon = _ref$rightIcon === void 0 ? false : _ref$rightIcon,
    _ref$iconOnly = _ref.iconOnly,
    iconOnly = _ref$iconOnly === void 0 ? false : _ref$iconOnly,
    children = _ref.children,
    onClick = _ref.onClick,
    rest = _objectWithoutProperties(_ref, _excluded);
  var buttonClasses = ['btn', "btn-".concat(variant), "btn-".concat(style), "btn-".concat(size), fullWidth ? 'btn-full-width' : '', iconOnly ? 'btn-icon-only' : ''].filter(Boolean).join(' ');

  // 아이콘 크기는 버튼 크기보다 한 단계 작게 설정
  var getIconSize = function getIconSize(btnSize) {
    var sizeMap = {
      xs: 'xs',
      sm: 'xs',
      md: 'sm',
      lg: 'md',
      xl: 'lg'
    };
    return sizeMap[btnSize] || 'sm';
  };

  // 버튼 타입에 따른 기본 아이콘 선택
  var getDefaultIcon = function getDefaultIcon(type) {
    var iconMap = {
      leftIcon: {
        primary: 'line-icons/home',
        secondary: 'line-icons/settings',
        cta: 'line-icons/checkmark'
      },
      rightIcon: {
        primary: 'line-icons/arrow/arrow-right',
        secondary: 'line-icons/arrow/arrow-right',
        cta: 'line-icons/arrow/arrow-right'
      },
      iconOnly: {
        primary: 'line-icons/home',
        secondary: 'line-icons/settings',
        cta: 'line-icons/checkmark'
      }
    };
    return iconMap[type][variant] || iconMap[type].primary;
  };

  // 버튼 상태에 따른 시멘틱 토큰 색상 반환
  var getSemanticColor = function getSemanticColor() {
    if (disabled) {
      return style === 'filled' ? "var(--semantic-color-".concat(variant, "-oncolor-global)") : "var(--semantic-color-".concat(variant, "-foreground-1-disabled)");
    }
    if (style === 'filled') {
      return "var(--semantic-color-".concat(variant, "-oncolor-global)");
    } else {
      return "var(--semantic-color-".concat(variant, "-foreground-1-rest)");
    }
  };
  var iconSize = getIconSize(size);
  var iconColor = getSemanticColor();

  // iconOnly인 경우 버튼 내용은 아이콘만 표시
  if (iconOnly) {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
      className: buttonClasses,
      disabled: disabled,
      onClick: onClick
    }, rest, {
      "aria-label": typeof children === 'string' ? children : 'Icon button'
    }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
      className: "btn-icon",
      style: {
        '--icon-color': iconColor
      }
    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], {
      name: getDefaultIcon('iconOnly'),
      size: iconSize
    })));
  }
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", _extends({
    className: buttonClasses,
    disabled: disabled,
    onClick: onClick
  }, rest), leftIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: "btn-icon btn-icon-left",
    style: {
      '--icon-color': iconColor
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], {
    name: getDefaultIcon('leftIcon'),
    size: iconSize
  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: "btn-text"
  }, children), rightIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
    className: "btn-icon btn-icon-right",
    style: {
      '--icon-color': iconColor
    }
  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_shared_components_Icon__WEBPACK_IMPORTED_MODULE_1__["default"], {
    name: getDefaultIcon('rightIcon'),
    size: iconSize
  })));
};
Button.propTypes = {
  style: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf(['filled', 'outlined', 'transparent']),
  size: prop_types__WEBPACK_IMPORTED_MODULE_3___default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']),
  fullWidth: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  leftIcon: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  rightIcon: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  iconOnly: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().bool),
  children: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().node),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_3___default().func)
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
;
Button.__docgenInfo = {
  "description": "버튼 컴포넌트\n@param {object} props - 컴포넌트 속성\n@param {'filled'|'outlined'|'transparent'} props.style - 버튼 스타일\n@param {'xs'|'sm'|'md'|'lg'|'xl'} props.size - 버튼 크기\n@param {boolean} props.fullWidth - 전체 너비 적용 여부\n@param {boolean} props.disabled - 비활성화 여부\n@param {boolean} props.leftIcon - 왼쪽 아이콘 표시 여부\n@param {boolean} props.rightIcon - 오른쪽 아이콘 표시 여부\n@param {boolean} props.iconOnly - 아이콘만 표시 여부\n@param {React.ReactNode} props.children - 버튼 내용\n@param {function} props.onClick - 클릭 이벤트 핸들러",
  "methods": [],
  "displayName": "Button",
  "props": {
    "variant": {
      "defaultValue": {
        "value": "'primary'",
        "computed": false
      },
      "required": false
    },
    "style": {
      "defaultValue": {
        "value": "'filled'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'filled'",
          "computed": false
        }, {
          "value": "'outlined'",
          "computed": false
        }, {
          "value": "'transparent'",
          "computed": false
        }]
      },
      "required": false
    },
    "size": {
      "defaultValue": {
        "value": "'md'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'xs'",
          "computed": false
        }, {
          "value": "'sm'",
          "computed": false
        }, {
          "value": "'md'",
          "computed": false
        }, {
          "value": "'lg'",
          "computed": false
        }, {
          "value": "'xl'",
          "computed": false
        }]
      },
      "required": false
    },
    "fullWidth": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "disabled": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "leftIcon": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "rightIcon": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "iconOnly": {
      "defaultValue": {
        "value": "false",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "bool"
      },
      "required": false
    },
    "children": {
      "description": "",
      "type": {
        "name": "node"
      },
      "required": false
    },
    "onClick": {
      "description": "",
      "type": {
        "name": "func"
      },
      "required": false
    }
  }
};

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./design-systems/system-1/components/primitives/Button/Button.css":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./design-systems/system-1/components/primitives/Button/Button.css ***!
  \*******************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_styles_variables_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! -!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!../../../styles/variables.css */ "./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[6].use[1]!./design-systems/system-1/styles/variables.css");
// Imports



var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_ruleSet_1_rules_6_use_1_styles_variables_css__WEBPACK_IMPORTED_MODULE_2__["default"]);
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/* 기본 버튼 스타일 */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--semantic-spacingHor-global-sm);
  font-family: var(--foundation-typography-fontFamily-base);
  font-weight: var(--semantic-typography-label\\/1-medium-fontWeight);
  letter-spacing: var(--semantic-typography-label\\/1-medium-letterSpacing);
  line-height: var(--semantic-typography-label\\/1-medium-lineHeight);
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  border: 1px solid transparent;
  box-sizing: border-box;
  border-radius: var(--semantic-radius-global-md);
}

/* 버튼 텍스트 스타일 */
.btn-text {
  display: inline-flex;
  align-items: center;
  line-height: 1;
}

/* 아이콘 컨테이너 스타일 */
.btn-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

/* 아이콘 전용 버튼 */
.btn-icon-only {
  padding: var(--semantic-spacingHor-global-sm);
  aspect-ratio: 1/1; /* 정사각형 형태 유지 */
}

.btn:disabled {
  cursor: not-allowed;
  opacity: 0.6;
}

/* 버튼 크기 */
.btn-xs {
  padding: var(--semantic-spacingVer-global-xxs) var(--semantic-spacingHor-global-xs);
  font-size: var(--semantic-typography-caption\\/1-medium-fontSize);
  line-height: var(--semantic-typography-caption\\/1-medium-lineHeight);
  letter-spacing: var(--semantic-typography-caption\\/1-medium-letterSpacing);
}

.btn-sm {
  padding: var(--semantic-spacingVer-global-xxs) var(--semantic-spacingHor-global-sm);
  font-size: var(--semantic-typography-label\\/2-medium-fontSize);
  line-height: var(--semantic-typography-label\\/2-medium-lineHeight);
  letter-spacing: var(--semantic-typography-label\\/2-medium-letterSpacing);
}

.btn-md {
  padding: var(--semantic-spacingVer-global-xs) var(--semantic-spacingHor-global-sm);
  font-size: var(--semantic-typography-label\\/1-medium-fontSize);
  line-height: var(--semantic-typography-label\\/1-medium-lineHeight);
  letter-spacing: var(--semantic-typography-label\\/1-medium-letterSpacing);
}

.btn-lg {
  padding: var(--semantic-spacingVer-global-xs) var(--semantic-spacingHor-global-lg);
  font-size: var(--semantic-typography-body\\/2-medium-fontSize);
  line-height: var(--semantic-typography-body\\/2-medium-lineHeight);
  letter-spacing: var(--semantic-typography-body\\/2-medium-letterSpacing);
}

.btn-xl {
  padding: var(--semantic-spacingVer-global-sm) var(--semantic-spacingHor-global-lg);
  font-size: var(--semantic-typography-body\\/1-medium-fontSize);
  line-height: var(--semantic-typography-body\\/1-medium-lineHeight);
  letter-spacing: var(--semantic-typography-body\\/1-medium-letterSpacing);
}

/* 아이콘 크기별 크기 조정 */
.btn-icon-only.btn-xs {
  padding: var(--semantic-spacingHor-global-xs);
}

.btn-icon-only.btn-sm {
  padding: var(--semantic-spacingHor-global-sm);
}

.btn-icon-only.btn-md {
  padding: var(--semantic-spacingHor-global-sm);
}

.btn-icon-only.btn-lg {
  padding: var(--semantic-spacingHor-global-md);
}

.btn-icon-only.btn-xl {
  padding: var(--semantic-spacingHor-global-md);
}

/* 아이콘 크기 및 간격 */
.btn-icon img {
  vertical-align: middle;
  /* 버튼 아이콘에 CSS 변수로 정의된 색상 적용 (SVG 색상 변경용) */
  filter: brightness(0) invert(0); /* 먼저 black으로 변환 */
}

/* Filled 버튼의 아이콘은 흰색 (oncolor) */
.btn-filled .btn-icon img {
  filter: brightness(0) invert(1); /* 흰색으로 변환 */
}

.btn-icon-left {
  margin-right: var(--semantic-spacingHor-global-xxs);
}

.btn-icon-right {
  margin-left: var(--semantic-spacingHor-global-xxs);
}

/* 버튼 아이콘 색상 (CSS 변수 사용) */
/* Primary 버튼 아이콘 */
.btn-primary .btn-icon-filled img {
  /* Primary filled: oncolor 토큰 사용 */
  filter: brightness(0) invert(1); /* 흰색 (oncolor) */
}

.btn-primary .btn-icon-outline img {
  /* Primary outlined/transparent: foreground 토큰 사용 */
  filter: brightness(0); /* 먼저 검은색으로 변환 */
  opacity: 0.8;
  mix-blend-mode: screen;
  background-color: var(--semantic-color-primary-foreground-1-rest);
}

.btn-primary:hover:not(:disabled) .btn-icon-outline img {
  background-color: var(--semantic-color-primary-foreground-1-hovered);
}

.btn-primary:active:not(:disabled) .btn-icon-outline img {
  background-color: var(--semantic-color-primary-foreground-1-pressed);
}

/* Secondary 버튼 아이콘 */
.btn-secondary .btn-icon-filled img {
  /* Secondary filled: foreground 토큰 사용 */
  filter: brightness(0); /* 검은색으로 변환 */
  opacity: 0.8;
  mix-blend-mode: screen;
  background-color: var(--semantic-color-secondary-foreground-2-rest);
}

.btn-secondary .btn-icon-outline img {
  /* Secondary outlined/transparent: foreground 토큰 사용 */
  filter: brightness(0); /* 검은색으로 변환 */
  opacity: 0.8;
  mix-blend-mode: screen;
  background-color: var(--semantic-color-secondary-foreground-2-rest);
}

.btn-secondary:hover:not(:disabled) .btn-icon-outline img {
  background-color: var(--semantic-color-secondary-foreground-2-hovered);
}

.btn-secondary:active:not(:disabled) .btn-icon-outline img {
  background-color: var(--semantic-color-secondary-foreground-2-pressed);
}

/* CTA 버튼 아이콘 */
.btn-cta .btn-icon-filled img {
  /* CTA filled: oncolor 토큰 사용 */
  filter: brightness(0) invert(1); /* 흰색 (oncolor) */
}

.btn-cta .btn-icon-outline img {
  /* CTA outlined/transparent: foreground 토큰 사용 */
  filter: brightness(0); /* 검은색으로 변환 */
  opacity: 0.8;
  mix-blend-mode: screen;
  background-color: var(--semantic-color-cta-foreground-2-rest);
}

.btn-cta:hover:not(:disabled) .btn-icon-outline img {
  background-color: var(--semantic-color-cta-foreground-2-hovered);
}

.btn-cta:active:not(:disabled) .btn-icon-outline img {
  background-color: var(--semantic-color-cta-foreground-2-pressed);
}

/* 비활성화된 버튼 아이콘 */
.btn:disabled .btn-icon img {
  opacity: 0.6;
}

.btn-primary:disabled .btn-icon img {
  background-color: var(--semantic-color-primary-foreground-1-disabled);
}

.btn-secondary:disabled .btn-icon img {
  background-color: var(--semantic-color-secondary-foreground-1-disabled);
}

.btn-cta:disabled .btn-icon img {
  background-color: var(--semantic-color-cta-foreground-2-disabled);
}

/* 종류별 스타일 - Primary */
/* Filled */
.btn-primary.btn-filled {
  background-color: var(--semantic-color-primary-background-1-rest);
  color: var(--semantic-color-primary-oncolor-global);
}

.btn-primary.btn-filled:hover:not(:disabled) {
  background-color: var(--semantic-color-primary-background-1-hovered);
}

.btn-primary.btn-filled:active:not(:disabled) {
  background-color: var(--semantic-color-primary-background-1-pressed);
}

.btn-primary.btn-filled:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-primary.btn-filled:disabled {
  background-color: var(--semantic-color-primary-background-1-disabled);
  color: var(--semantic-color-primary-foreground-1-disabled);
}

/* Outlined */
.btn-primary.btn-outlined {
  background-color: transparent;
  color: var(--semantic-color-primary-foreground-1-rest);
  border-color: var(--semantic-color-primary-stroke-1-rest);
}

.btn-primary.btn-outlined:hover:not(:disabled) {
  border-color: var(--semantic-color-primary-background-1-hovered);
  background-color: var(--semantic-color-overlay-background-light-subtle);
  color: var(--semantic-color-primary-foreground-1-hovered);
}

.btn-primary.btn-outlined:active:not(:disabled) {
  border-color: var(--semantic-color-primary-background-1-pressed);
  background-color: var(--semantic-color-overlay-background-light-medium);
  color: var(--semantic-color-primary-foreground-1-pressed);
}

.btn-primary.btn-outlined:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-primary.btn-outlined:disabled {
  border-color: var(--semantic-color-primary-background-1-disabled);
  color: var(--semantic-color-primary-foreground-1-disabled);
}

/* Transparent */
.btn-primary.btn-transparent {
  background-color: transparent;
  color: var(--semantic-color-primary-foreground-1-rest);
  border-color: transparent;
}

.btn-primary.btn-transparent:hover:not(:disabled) {
  background-color: var(--semantic-color-overlay-background-light-subtle);
  color: var(--semantic-color-primary-foreground-1-hovered);
}

.btn-primary.btn-transparent:active:not(:disabled) {
  background-color: var(--semantic-color-overlay-background-light-medium);
  color: var(--semantic-color-primary-foreground-1-pressed);
}

.btn-primary.btn-transparent:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-primary.btn-transparent:disabled {
  color: var(--semantic-color-primary-foreground-1-disabled);
}

/* 종류별 스타일 - Secondary */
/* Filled */
.btn-secondary.btn-filled {
  background-color: var(--semantic-color-secondary-background-1-rest);
  color: var(--semantic-color-secondary-foreground-2-rest);
}

.btn-secondary.btn-filled:hover:not(:disabled) {
  background-color: var(--semantic-color-secondary-background-1-hovered);
}

.btn-secondary.btn-filled:active:not(:disabled) {
  background-color: var(--semantic-color-secondary-background-1-pressed);
}

.btn-secondary.btn-filled:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-secondary.btn-filled:disabled {
  background-color: var(--semantic-color-secondary-background-1-disabled);
  color: var(--semantic-color-secondary-foreground-1-disabled);
}

/* Outlined */
.btn-secondary.btn-outlined {
  background-color: transparent;
  color: var(--semantic-color-secondary-foreground-2-rest);
  border-color: var(--semantic-color-secondary-stroke-1-rest);
}

.btn-secondary.btn-outlined:hover:not(:disabled) {
  border-color: var(--semantic-color-secondary-background-1-hovered);
  background-color: var(--semantic-color-overlay-background-light-subtle);
}

.btn-secondary.btn-outlined:active:not(:disabled) {
  border-color: var(--semantic-color-secondary-background-1-pressed);
  background-color: var(--semantic-color-overlay-background-light-medium);
}

.btn-secondary.btn-outlined:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-secondary.btn-outlined:disabled {
  border-color: var(--semantic-color-secondary-background-1-disabled);
  color: var(--semantic-color-secondary-foreground-1-disabled);
}

/* Transparent */
.btn-secondary.btn-transparent {
  background-color: transparent;
  color: var(--semantic-color-secondary-foreground-2-rest);
  border-color: transparent;
}

.btn-secondary.btn-transparent:hover:not(:disabled) {
  background-color: var(--semantic-color-overlay-background-light-subtle);
}

.btn-secondary.btn-transparent:active:not(:disabled) {
  background-color: var(--semantic-color-overlay-background-light-medium);
}

.btn-secondary.btn-transparent:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-secondary.btn-transparent:disabled {
  color: var(--semantic-color-secondary-foreground-1-disabled);
}

/* 종류별 스타일 - CTA */
/* Filled */
.btn-cta.btn-filled {
  background-color: var(--semantic-color-cta-background-1-rest);
  color: var(--semantic-color-cta-oncolor-global);
}

.btn-cta.btn-filled:hover:not(:disabled) {
  background-color: var(--semantic-color-cta-background-1-hovered);
}

.btn-cta.btn-filled:active:not(:disabled) {
  background-color: var(--semantic-color-cta-background-1-pressed);
}

.btn-cta.btn-filled:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-cta.btn-filled:disabled {
  background-color: var(--semantic-color-cta-background-1-disabled);
  color: var(--semantic-color-cta-foreground-1-disabled);
}

/* Outlined */
.btn-cta.btn-outlined {
  background-color: transparent;
  color: var(--semantic-color-cta-foreground-2-rest);
  border-color: var(--semantic-color-cta-stroke-1-rest);
}

.btn-cta.btn-outlined:hover:not(:disabled) {
  border-color: var(--semantic-color-cta-stroke-2-rest);
  background-color: var(--semantic-color-overlay-background-light-subtle);
}

.btn-cta.btn-outlined:active:not(:disabled) {
  border-color: var(--semantic-color-cta-foreground-2-rest);
  background-color: var(--semantic-color-overlay-background-light-medium);
}

.btn-cta.btn-outlined:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-cta.btn-outlined:disabled {
  border-color: var(--semantic-color-cta-stroke-1-rest);
  color: var(--semantic-color-cta-foreground-2-disabled);
}

/* Transparent */
.btn-cta.btn-transparent {
  background-color: transparent;
  color: var(--semantic-color-cta-foreground-2-rest);
  border-color: transparent;
}

.btn-cta.btn-transparent:hover:not(:disabled) {
  background-color: var(--semantic-color-overlay-background-light-subtle);
}

.btn-cta.btn-transparent:active:not(:disabled) {
  background-color: var(--semantic-color-overlay-background-light-medium);
}

.btn-cta.btn-transparent:focus-visible:not(:active) {
  outline: 2px solid var(--semantic-color-status-focused-global);
  outline-offset: 2px;
}

.btn-cta.btn-transparent:disabled {
  color: var(--semantic-color-cta-foreground-2-disabled);
}

/* 추가 레이아웃 스타일 */
.btn-full-width {
  width: 100%;
} `, "",{"version":3,"sources":["webpack://./design-systems/system-1/components/primitives/Button/Button.css"],"names":[],"mappings":"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","sourcesContent":["@import '../../../styles/variables.css';\n\n/* 기본 버튼 스타일 */\n.btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--semantic-spacingHor-global-sm);\n  font-family: var(--foundation-typography-fontFamily-base);\n  font-weight: var(--semantic-typography-label\\/1-medium-fontWeight);\n  letter-spacing: var(--semantic-typography-label\\/1-medium-letterSpacing);\n  line-height: var(--semantic-typography-label\\/1-medium-lineHeight);\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  border: 1px solid transparent;\n  box-sizing: border-box;\n  border-radius: var(--semantic-radius-global-md);\n}\n\n/* 버튼 텍스트 스타일 */\n.btn-text {\n  display: inline-flex;\n  align-items: center;\n  line-height: 1;\n}\n\n/* 아이콘 컨테이너 스타일 */\n.btn-icon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 아이콘 전용 버튼 */\n.btn-icon-only {\n  padding: var(--semantic-spacingHor-global-sm);\n  aspect-ratio: 1/1; /* 정사각형 형태 유지 */\n}\n\n.btn:disabled {\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n/* 버튼 크기 */\n.btn-xs {\n  padding: var(--semantic-spacingVer-global-xxs) var(--semantic-spacingHor-global-xs);\n  font-size: var(--semantic-typography-caption\\/1-medium-fontSize);\n  line-height: var(--semantic-typography-caption\\/1-medium-lineHeight);\n  letter-spacing: var(--semantic-typography-caption\\/1-medium-letterSpacing);\n}\n\n.btn-sm {\n  padding: var(--semantic-spacingVer-global-xxs) var(--semantic-spacingHor-global-sm);\n  font-size: var(--semantic-typography-label\\/2-medium-fontSize);\n  line-height: var(--semantic-typography-label\\/2-medium-lineHeight);\n  letter-spacing: var(--semantic-typography-label\\/2-medium-letterSpacing);\n}\n\n.btn-md {\n  padding: var(--semantic-spacingVer-global-xs) var(--semantic-spacingHor-global-sm);\n  font-size: var(--semantic-typography-label\\/1-medium-fontSize);\n  line-height: var(--semantic-typography-label\\/1-medium-lineHeight);\n  letter-spacing: var(--semantic-typography-label\\/1-medium-letterSpacing);\n}\n\n.btn-lg {\n  padding: var(--semantic-spacingVer-global-xs) var(--semantic-spacingHor-global-lg);\n  font-size: var(--semantic-typography-body\\/2-medium-fontSize);\n  line-height: var(--semantic-typography-body\\/2-medium-lineHeight);\n  letter-spacing: var(--semantic-typography-body\\/2-medium-letterSpacing);\n}\n\n.btn-xl {\n  padding: var(--semantic-spacingVer-global-sm) var(--semantic-spacingHor-global-lg);\n  font-size: var(--semantic-typography-body\\/1-medium-fontSize);\n  line-height: var(--semantic-typography-body\\/1-medium-lineHeight);\n  letter-spacing: var(--semantic-typography-body\\/1-medium-letterSpacing);\n}\n\n/* 아이콘 크기별 크기 조정 */\n.btn-icon-only.btn-xs {\n  padding: var(--semantic-spacingHor-global-xs);\n}\n\n.btn-icon-only.btn-sm {\n  padding: var(--semantic-spacingHor-global-sm);\n}\n\n.btn-icon-only.btn-md {\n  padding: var(--semantic-spacingHor-global-sm);\n}\n\n.btn-icon-only.btn-lg {\n  padding: var(--semantic-spacingHor-global-md);\n}\n\n.btn-icon-only.btn-xl {\n  padding: var(--semantic-spacingHor-global-md);\n}\n\n/* 아이콘 크기 및 간격 */\n.btn-icon img {\n  vertical-align: middle;\n  /* 버튼 아이콘에 CSS 변수로 정의된 색상 적용 (SVG 색상 변경용) */\n  filter: brightness(0) invert(0); /* 먼저 black으로 변환 */\n}\n\n/* Filled 버튼의 아이콘은 흰색 (oncolor) */\n.btn-filled .btn-icon img {\n  filter: brightness(0) invert(1); /* 흰색으로 변환 */\n}\n\n.btn-icon-left {\n  margin-right: var(--semantic-spacingHor-global-xxs);\n}\n\n.btn-icon-right {\n  margin-left: var(--semantic-spacingHor-global-xxs);\n}\n\n/* 버튼 아이콘 색상 (CSS 변수 사용) */\n/* Primary 버튼 아이콘 */\n.btn-primary .btn-icon-filled img {\n  /* Primary filled: oncolor 토큰 사용 */\n  filter: brightness(0) invert(1); /* 흰색 (oncolor) */\n}\n\n.btn-primary .btn-icon-outline img {\n  /* Primary outlined/transparent: foreground 토큰 사용 */\n  filter: brightness(0); /* 먼저 검은색으로 변환 */\n  opacity: 0.8;\n  mix-blend-mode: screen;\n  background-color: var(--semantic-color-primary-foreground-1-rest);\n}\n\n.btn-primary:hover:not(:disabled) .btn-icon-outline img {\n  background-color: var(--semantic-color-primary-foreground-1-hovered);\n}\n\n.btn-primary:active:not(:disabled) .btn-icon-outline img {\n  background-color: var(--semantic-color-primary-foreground-1-pressed);\n}\n\n/* Secondary 버튼 아이콘 */\n.btn-secondary .btn-icon-filled img {\n  /* Secondary filled: foreground 토큰 사용 */\n  filter: brightness(0); /* 검은색으로 변환 */\n  opacity: 0.8;\n  mix-blend-mode: screen;\n  background-color: var(--semantic-color-secondary-foreground-2-rest);\n}\n\n.btn-secondary .btn-icon-outline img {\n  /* Secondary outlined/transparent: foreground 토큰 사용 */\n  filter: brightness(0); /* 검은색으로 변환 */\n  opacity: 0.8;\n  mix-blend-mode: screen;\n  background-color: var(--semantic-color-secondary-foreground-2-rest);\n}\n\n.btn-secondary:hover:not(:disabled) .btn-icon-outline img {\n  background-color: var(--semantic-color-secondary-foreground-2-hovered);\n}\n\n.btn-secondary:active:not(:disabled) .btn-icon-outline img {\n  background-color: var(--semantic-color-secondary-foreground-2-pressed);\n}\n\n/* CTA 버튼 아이콘 */\n.btn-cta .btn-icon-filled img {\n  /* CTA filled: oncolor 토큰 사용 */\n  filter: brightness(0) invert(1); /* 흰색 (oncolor) */\n}\n\n.btn-cta .btn-icon-outline img {\n  /* CTA outlined/transparent: foreground 토큰 사용 */\n  filter: brightness(0); /* 검은색으로 변환 */\n  opacity: 0.8;\n  mix-blend-mode: screen;\n  background-color: var(--semantic-color-cta-foreground-2-rest);\n}\n\n.btn-cta:hover:not(:disabled) .btn-icon-outline img {\n  background-color: var(--semantic-color-cta-foreground-2-hovered);\n}\n\n.btn-cta:active:not(:disabled) .btn-icon-outline img {\n  background-color: var(--semantic-color-cta-foreground-2-pressed);\n}\n\n/* 비활성화된 버튼 아이콘 */\n.btn:disabled .btn-icon img {\n  opacity: 0.6;\n}\n\n.btn-primary:disabled .btn-icon img {\n  background-color: var(--semantic-color-primary-foreground-1-disabled);\n}\n\n.btn-secondary:disabled .btn-icon img {\n  background-color: var(--semantic-color-secondary-foreground-1-disabled);\n}\n\n.btn-cta:disabled .btn-icon img {\n  background-color: var(--semantic-color-cta-foreground-2-disabled);\n}\n\n/* 종류별 스타일 - Primary */\n/* Filled */\n.btn-primary.btn-filled {\n  background-color: var(--semantic-color-primary-background-1-rest);\n  color: var(--semantic-color-primary-oncolor-global);\n}\n\n.btn-primary.btn-filled:hover:not(:disabled) {\n  background-color: var(--semantic-color-primary-background-1-hovered);\n}\n\n.btn-primary.btn-filled:active:not(:disabled) {\n  background-color: var(--semantic-color-primary-background-1-pressed);\n}\n\n.btn-primary.btn-filled:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-primary.btn-filled:disabled {\n  background-color: var(--semantic-color-primary-background-1-disabled);\n  color: var(--semantic-color-primary-foreground-1-disabled);\n}\n\n/* Outlined */\n.btn-primary.btn-outlined {\n  background-color: transparent;\n  color: var(--semantic-color-primary-foreground-1-rest);\n  border-color: var(--semantic-color-primary-stroke-1-rest);\n}\n\n.btn-primary.btn-outlined:hover:not(:disabled) {\n  border-color: var(--semantic-color-primary-background-1-hovered);\n  background-color: var(--semantic-color-overlay-background-light-subtle);\n  color: var(--semantic-color-primary-foreground-1-hovered);\n}\n\n.btn-primary.btn-outlined:active:not(:disabled) {\n  border-color: var(--semantic-color-primary-background-1-pressed);\n  background-color: var(--semantic-color-overlay-background-light-medium);\n  color: var(--semantic-color-primary-foreground-1-pressed);\n}\n\n.btn-primary.btn-outlined:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-primary.btn-outlined:disabled {\n  border-color: var(--semantic-color-primary-background-1-disabled);\n  color: var(--semantic-color-primary-foreground-1-disabled);\n}\n\n/* Transparent */\n.btn-primary.btn-transparent {\n  background-color: transparent;\n  color: var(--semantic-color-primary-foreground-1-rest);\n  border-color: transparent;\n}\n\n.btn-primary.btn-transparent:hover:not(:disabled) {\n  background-color: var(--semantic-color-overlay-background-light-subtle);\n  color: var(--semantic-color-primary-foreground-1-hovered);\n}\n\n.btn-primary.btn-transparent:active:not(:disabled) {\n  background-color: var(--semantic-color-overlay-background-light-medium);\n  color: var(--semantic-color-primary-foreground-1-pressed);\n}\n\n.btn-primary.btn-transparent:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-primary.btn-transparent:disabled {\n  color: var(--semantic-color-primary-foreground-1-disabled);\n}\n\n/* 종류별 스타일 - Secondary */\n/* Filled */\n.btn-secondary.btn-filled {\n  background-color: var(--semantic-color-secondary-background-1-rest);\n  color: var(--semantic-color-secondary-foreground-2-rest);\n}\n\n.btn-secondary.btn-filled:hover:not(:disabled) {\n  background-color: var(--semantic-color-secondary-background-1-hovered);\n}\n\n.btn-secondary.btn-filled:active:not(:disabled) {\n  background-color: var(--semantic-color-secondary-background-1-pressed);\n}\n\n.btn-secondary.btn-filled:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-secondary.btn-filled:disabled {\n  background-color: var(--semantic-color-secondary-background-1-disabled);\n  color: var(--semantic-color-secondary-foreground-1-disabled);\n}\n\n/* Outlined */\n.btn-secondary.btn-outlined {\n  background-color: transparent;\n  color: var(--semantic-color-secondary-foreground-2-rest);\n  border-color: var(--semantic-color-secondary-stroke-1-rest);\n}\n\n.btn-secondary.btn-outlined:hover:not(:disabled) {\n  border-color: var(--semantic-color-secondary-background-1-hovered);\n  background-color: var(--semantic-color-overlay-background-light-subtle);\n}\n\n.btn-secondary.btn-outlined:active:not(:disabled) {\n  border-color: var(--semantic-color-secondary-background-1-pressed);\n  background-color: var(--semantic-color-overlay-background-light-medium);\n}\n\n.btn-secondary.btn-outlined:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-secondary.btn-outlined:disabled {\n  border-color: var(--semantic-color-secondary-background-1-disabled);\n  color: var(--semantic-color-secondary-foreground-1-disabled);\n}\n\n/* Transparent */\n.btn-secondary.btn-transparent {\n  background-color: transparent;\n  color: var(--semantic-color-secondary-foreground-2-rest);\n  border-color: transparent;\n}\n\n.btn-secondary.btn-transparent:hover:not(:disabled) {\n  background-color: var(--semantic-color-overlay-background-light-subtle);\n}\n\n.btn-secondary.btn-transparent:active:not(:disabled) {\n  background-color: var(--semantic-color-overlay-background-light-medium);\n}\n\n.btn-secondary.btn-transparent:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-secondary.btn-transparent:disabled {\n  color: var(--semantic-color-secondary-foreground-1-disabled);\n}\n\n/* 종류별 스타일 - CTA */\n/* Filled */\n.btn-cta.btn-filled {\n  background-color: var(--semantic-color-cta-background-1-rest);\n  color: var(--semantic-color-cta-oncolor-global);\n}\n\n.btn-cta.btn-filled:hover:not(:disabled) {\n  background-color: var(--semantic-color-cta-background-1-hovered);\n}\n\n.btn-cta.btn-filled:active:not(:disabled) {\n  background-color: var(--semantic-color-cta-background-1-pressed);\n}\n\n.btn-cta.btn-filled:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-cta.btn-filled:disabled {\n  background-color: var(--semantic-color-cta-background-1-disabled);\n  color: var(--semantic-color-cta-foreground-1-disabled);\n}\n\n/* Outlined */\n.btn-cta.btn-outlined {\n  background-color: transparent;\n  color: var(--semantic-color-cta-foreground-2-rest);\n  border-color: var(--semantic-color-cta-stroke-1-rest);\n}\n\n.btn-cta.btn-outlined:hover:not(:disabled) {\n  border-color: var(--semantic-color-cta-stroke-2-rest);\n  background-color: var(--semantic-color-overlay-background-light-subtle);\n}\n\n.btn-cta.btn-outlined:active:not(:disabled) {\n  border-color: var(--semantic-color-cta-foreground-2-rest);\n  background-color: var(--semantic-color-overlay-background-light-medium);\n}\n\n.btn-cta.btn-outlined:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-cta.btn-outlined:disabled {\n  border-color: var(--semantic-color-cta-stroke-1-rest);\n  color: var(--semantic-color-cta-foreground-2-disabled);\n}\n\n/* Transparent */\n.btn-cta.btn-transparent {\n  background-color: transparent;\n  color: var(--semantic-color-cta-foreground-2-rest);\n  border-color: transparent;\n}\n\n.btn-cta.btn-transparent:hover:not(:disabled) {\n  background-color: var(--semantic-color-overlay-background-light-subtle);\n}\n\n.btn-cta.btn-transparent:active:not(:disabled) {\n  background-color: var(--semantic-color-overlay-background-light-medium);\n}\n\n.btn-cta.btn-transparent:focus-visible:not(:active) {\n  outline: 2px solid var(--semantic-color-status-focused-global);\n  outline-offset: 2px;\n}\n\n.btn-cta.btn-transparent:disabled {\n  color: var(--semantic-color-cta-foreground-2-disabled);\n}\n\n/* 추가 레이아웃 스타일 */\n.btn-full-width {\n  width: 100%;\n} "],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./shared/components/Icon/index.jsx":
/*!******************************************!*\
  !*** ./shared/components/Icon/index.jsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
var _excluded = ["name", "size", "color", "onClick", "className"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}



/**
 * Icon 컴포넌트 - Google Material Design 가이드라인을 따르는 SVG 아이콘을 표시합니다.
 * 
 * @param {Object} props - 컴포넌트 속성
 * @param {string} props.name - 아이콘 이름 (경로 포함, 예: "logo/brand-logo" 또는 "line-icons/home")
 * @param {string} props.size - 아이콘 크기 (xs, sm, md, lg, xl)
 * @param {string} props.color - 아이콘 색상 (기본 색상 또는 CSS 색상값)
 * @param {function} props.onClick - 클릭 이벤트 핸들러
 * @param {string} props.className - 추가적인 CSS 클래스
 */
var Icon = function Icon(_ref) {
  var name = _ref.name,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    color = _ref.color,
    onClick = _ref.onClick,
    className = _ref.className,
    rest = _objectWithoutProperties(_ref, _excluded);
  // CSS 변수를 통해 아이콘 크기를 가져옵니다.
  // 이렇게 하면 foundation token에 정의된 값을 상속받습니다.
  var getIconSize = function getIconSize() {
    // CSS 변수를 사용하지만, 숫자 값으로 변환해야 합니다.
    var sizeVarName = "var(--semantic-size-".concat(size, ")");

    // 기본 크기를 제공합니다 (CSS 변수를 가져올 수 없는 경우를 대비)
    var defaultSizes = {
      xs: '14px',
      sm: '16px',
      md: '18px',
      lg: '24px',
      xl: '32px'
    };
    return defaultSizes[size] || defaultSizes.md;
  };
  var iconSize = getIconSize();

  // 부모 요소에서 전달된 CSS 변수와 직접 지정한 color 중 우선순위 처리
  var getIconColor = function getIconColor() {
    if (color) {
      return color; // 직접 color prop으로 지정한 경우 우선 적용
    }
    return 'var(--icon-color, inherit)'; // 부모에서 CSS 변수 전달 또는 기본값
  };
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    onClick: onClick,
    className: "icon icon-".concat(size, " ").concat(className || ''),
    style: {
      display: 'inline-flex',
      alignItems: 'center',
      justifyContent: 'center',
      width: iconSize,
      height: iconSize,
      color: getIconColor() // 색상 적용
    }
  }, rest), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", {
    src: "/shared/tokens/icons/".concat(name, ".svg"),
    width: "100%",
    height: "100%",
    alt: "",
    style: {
      display: 'block',
      width: '100%',
      height: '100%'
      // 필터는 부모 컴포넌트에서 적용
    }
  }));
};

// 색상 필터 생성 함수
var generateColorFilter = function generateColorFilter(color) {
  if (!color) return 'none';

  // 특정 색상에 대한 필터 생성
  var colorMap = {
    'white': 'brightness(0) invert(1)',
    'black': 'brightness(0) invert(0)',
    'primary': 'invert(44%) sepia(93%) saturate(1937%) hue-rotate(194deg) brightness(98%) contrast(101%)',
    'secondary': 'invert(42%) sepia(0%) saturate(0%) hue-rotate(222deg) brightness(95%) contrast(95%)',
    'cta': 'invert(58%) sepia(79%) saturate(458%) hue-rotate(85deg) brightness(96%) contrast(87%)',
    'error': 'invert(38%) sepia(95%) saturate(7471%) hue-rotate(353deg) brightness(101%) contrast(105%)',
    'warning': 'invert(88%) sepia(33%) saturate(7500%) hue-rotate(359deg) brightness(101%) contrast(103%)',
    'success': 'invert(58%) sepia(79%) saturate(458%) hue-rotate(85deg) brightness(96%) contrast(87%)',
    'info': 'invert(44%) sepia(93%) saturate(1937%) hue-rotate(194deg) brightness(98%) contrast(101%)'
  };

  // inherit은 현재 텍스트 색상을 따라야 하므로 검은색 기본 아이콘에 
  // CSS의 currentColor를 적용하기 위한 필터
  if (color === 'inherit') {
    return 'brightness(0) invert(0.5) sepia(1) saturate(5) hue-rotate(175deg)';
  }
  return colorMap[color] || 'none';
};
Icon.propTypes = {
  name: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string).isRequired,
  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']),
  color: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string)
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icon);
;
Icon.__docgenInfo = {
  "description": "Icon 컴포넌트 - Google Material Design 가이드라인을 따르는 SVG 아이콘을 표시합니다.\n\n@param {Object} props - 컴포넌트 속성\n@param {string} props.name - 아이콘 이름 (경로 포함, 예: \"logo/brand-logo\" 또는 \"line-icons/home\")\n@param {string} props.size - 아이콘 크기 (xs, sm, md, lg, xl)\n@param {string} props.color - 아이콘 색상 (기본 색상 또는 CSS 색상값)\n@param {function} props.onClick - 클릭 이벤트 핸들러\n@param {string} props.className - 추가적인 CSS 클래스",
  "methods": [],
  "displayName": "Icon",
  "props": {
    "size": {
      "defaultValue": {
        "value": "'md'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'xs'",
          "computed": false
        }, {
          "value": "'sm'",
          "computed": false
        }, {
          "value": "'md'",
          "computed": false
        }, {
          "value": "'lg'",
          "computed": false
        }, {
          "value": "'xl'",
          "computed": false
        }]
      },
      "required": false
    },
    "name": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": true
    },
    "color": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": false
    },
    "onClick": {
      "description": "",
      "type": {
        "name": "func"
      },
      "required": false
    },
    "className": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": false
    }
  }
};

/***/ })

});
//# sourceMappingURL=design-systems_system-1_components_primitives_Button_index_jsx.96ad9baf7041b61a854d.hot-update.js.map