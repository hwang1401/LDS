"use strict";
self["webpackHotUpdatelds"]("design-systems_system-1_components_primitives_Button_index_jsx",{

/***/ "./shared/components/Icon/index.jsx":
/*!******************************************!*\
  !*** ./shared/components/Icon/index.jsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
var _excluded = ["name", "size", "color", "onClick", "className"];
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function (n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
function _objectWithoutProperties(e, t) {
  if (null == e) return {};
  var o,
    r,
    i = _objectWithoutPropertiesLoose(e, t);
  if (Object.getOwnPropertySymbols) {
    var n = Object.getOwnPropertySymbols(e);
    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);
  }
  return i;
}
function _objectWithoutPropertiesLoose(r, e) {
  if (null == r) return {};
  var t = {};
  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {
    if (-1 !== e.indexOf(n)) continue;
    t[n] = r[n];
  }
  return t;
}



/**
 * Icon 컴포넌트 - Google Material Design 가이드라인을 따르는 SVG 아이콘을 표시합니다.
 * 
 * @param {Object} props - 컴포넌트 속성
 * @param {string} props.name - 아이콘 이름 (경로 포함, 예: "logo/brand-logo" 또는 "line-icons/home")
 * @param {string} props.size - 아이콘 크기 (xs, sm, md, lg, xl)
 * @param {string} props.color - 아이콘 색상 (기본 색상 또는 CSS 색상값)
 * @param {function} props.onClick - 클릭 이벤트 핸들러
 * @param {string} props.className - 추가적인 CSS 클래스
 */
var Icon = function Icon(_ref) {
  var name = _ref.name,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'md' : _ref$size,
    color = _ref.color,
    onClick = _ref.onClick,
    className = _ref.className,
    rest = _objectWithoutProperties(_ref, _excluded);
  // CSS 변수를 통해 아이콘 크기를 가져옵니다.
  // 이렇게 하면 foundation token에 정의된 값을 상속받습니다.
  var getIconSize = function getIconSize() {
    // CSS 변수를 사용하지만, 숫자 값으로 변환해야 합니다.
    var sizeVarName = "var(--semantic-size-".concat(size, ")");

    // 기본 크기를 제공합니다 (CSS 변수를 가져올 수 없는 경우를 대비)
    var defaultSizes = {
      xs: '14px',
      sm: '16px',
      md: '18px',
      lg: '24px',
      xl: '32px'
    };
    return defaultSizes[size] || defaultSizes.md;
  };
  var iconSize = getIconSize();

  // SVG를 직접 렌더링하는 대신 IMG 태그로 SVG 파일 참조
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", _extends({
    onClick: onClick,
    className: "icon icon-".concat(size, " ").concat(className || ''),
    style: {
      display: 'inline-flex',
      alignItems: 'center',
      justifyContent: 'center',
      width: iconSize,
      height: iconSize
    }
  }, rest), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("img", {
    src: "/shared/tokens/icons/".concat(name, ".svg"),
    width: "100%",
    height: "100%",
    alt: "",
    style: {
      display: 'block',
      width: '100%',
      height: '100%',
      filter: color ? generateColorFilter(color) : 'none'
    }
  }));
};

// 색상 필터 생성 함수
var generateColorFilter = function generateColorFilter(color) {
  if (!color) return 'none';

  // 특정 색상에 대한 필터 생성
  var colorMap = {
    'white': 'brightness(0) invert(1)',
    'black': 'brightness(0) invert(0)',
    'primary': 'invert(44%) sepia(93%) saturate(1937%) hue-rotate(194deg) brightness(98%) contrast(101%)',
    'secondary': 'invert(42%) sepia(0%) saturate(0%) hue-rotate(222deg) brightness(95%) contrast(95%)',
    'cta': 'invert(58%) sepia(79%) saturate(458%) hue-rotate(85deg) brightness(96%) contrast(87%)',
    'error': 'invert(38%) sepia(95%) saturate(7471%) hue-rotate(353deg) brightness(101%) contrast(105%)',
    'warning': 'invert(88%) sepia(33%) saturate(7500%) hue-rotate(359deg) brightness(101%) contrast(103%)',
    'success': 'invert(58%) sepia(79%) saturate(458%) hue-rotate(85deg) brightness(96%) contrast(87%)',
    'info': 'invert(44%) sepia(93%) saturate(1937%) hue-rotate(194deg) brightness(98%) contrast(101%)'
  };

  // inherit은 현재 텍스트 색상을 따라야 하므로 검은색 기본 아이콘에 
  // CSS의 currentColor를 적용하기 위한 필터
  if (color === 'inherit') {
    return 'brightness(0) invert(0.5) sepia(1) saturate(5) hue-rotate(175deg)';
  }
  return colorMap[color] || 'none';
};
Icon.propTypes = {
  name: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string).isRequired,
  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default().oneOf(['xs', 'sm', 'md', 'lg', 'xl']),
  color: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string),
  onClick: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().func),
  className: (prop_types__WEBPACK_IMPORTED_MODULE_1___default().string)
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Icon);
;
Icon.__docgenInfo = {
  "description": "Icon 컴포넌트 - Google Material Design 가이드라인을 따르는 SVG 아이콘을 표시합니다.\r\n\r\n@param {Object} props - 컴포넌트 속성\r\n@param {string} props.name - 아이콘 이름 (경로 포함, 예: \"logo/brand-logo\" 또는 \"line-icons/home\")\r\n@param {string} props.size - 아이콘 크기 (xs, sm, md, lg, xl)\r\n@param {string} props.color - 아이콘 색상 (기본 색상 또는 CSS 색상값)\r\n@param {function} props.onClick - 클릭 이벤트 핸들러\r\n@param {string} props.className - 추가적인 CSS 클래스",
  "methods": [],
  "displayName": "Icon",
  "props": {
    "size": {
      "defaultValue": {
        "value": "'md'",
        "computed": false
      },
      "description": "",
      "type": {
        "name": "enum",
        "value": [{
          "value": "'xs'",
          "computed": false
        }, {
          "value": "'sm'",
          "computed": false
        }, {
          "value": "'md'",
          "computed": false
        }, {
          "value": "'lg'",
          "computed": false
        }, {
          "value": "'xl'",
          "computed": false
        }]
      },
      "required": false
    },
    "name": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": true
    },
    "color": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": false
    },
    "onClick": {
      "description": "",
      "type": {
        "name": "func"
      },
      "required": false
    },
    "className": {
      "description": "",
      "type": {
        "name": "string"
      },
      "required": false
    }
  }
};

/***/ })

});
//# sourceMappingURL=design-systems_system-1_components_primitives_Button_index_jsx.aeab142c1481e2391d7b.hot-update.js.map