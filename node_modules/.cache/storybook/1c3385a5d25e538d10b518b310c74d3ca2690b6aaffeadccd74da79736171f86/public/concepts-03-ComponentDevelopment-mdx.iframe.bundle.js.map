{"version":3,"file":"concepts-03-ComponentDevelopment-mdx.iframe.bundle.js","mappingslFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://lds/./docs/stories/concepts/03-ComponentDevelopment.mdx","webpack://lds/./node_modules/@mdx-js/react/lib/index.js","webpack://lds/./node_modules/@storybook/blocks/dist/ sync","webpack://lds/./node_modules/@storybook/core/dist/components/ sync","webpack://lds/./node_modules/@storybook/core/dist/theming/ sync"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"C:\\\\Users\\\\User\\\\Desktop\\\\Web파트\\\\LDS\\\\node_modules\\\\@storybook\\\\addon-docs\\\\dist\\\\shims\\\\mdx-react-shim.mjs\";\nimport {Meta} from '@storybook/blocks';\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    li: \"li\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      title: \"Concepts/03. 컴포넌트 개발 규칙\"\n    }), \"\\n\", _jsx(_components.h1, {\n      id: \"컴포넌트-개발-규칙\",\n      children: \"컴포넌트 개발 규칙\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"컴포넌트-계층-구조\",\n      children: \"컴포넌트 계층 구조\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Primitives\"\n        }), \": 더 이상 분해할 수 없는 기본 UI 요소 (Button, Input, Typography 등)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Compounds\"\n        }), \": 기본 요소를 조합한 복합 컴포넌트 (Card, Dialog, Dropdown 등)\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Patterns\"\n        }), \": 복합 요소와 기본 요소를 특정 사용자 경험을 위해 조합 (Form, SearchBar 등)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"컴포넌트-개발-원칙\",\n      children: \"컴포넌트 개발 원칙\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"모든 스타일은 시멘틱 토큰을 통해 적용할 것\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"하드코딩된 값 사용 금지\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"상태별 스타일 일관성 유지 (rest, hovered, pressed, focused, disabled 등)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"JSDoc을 통한 props와 컴포넌트 설명 필수\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"접근성(a11y) 고려\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"css-작성-규칙\",\n      children: \"CSS 작성 규칙\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"직접 파운데이션 토큰 변수를 사용하지 않고, 시멘틱 토큰 변수만 사용\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"변수 이름은 semantic.json과 정확히 일치해야 함\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"변수 이름이 없는 경우 파운데이션 토큰 직접 참조 가능 (예: 투명도)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"하드코딩된 색상값, 사이즈값 사용 금지\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"상태별 스타일 작성 시 동일한 패턴 유지\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"컴포넌트-스타일-예시\",\n      children: \"컴포넌트 스타일 예시\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-css\",\n        children: \"/* 잘못된 예 */\\r\\n.btn-primary.btn-filled:hover:not(:disabled) {\\r\\n  background-color: #64B5F6; /* 하드코딩된 값 */\\r\\n  border-color: rgba(33, 150, 243, 0.1); /* 하드코딩된 값 */\\r\\n}\\r\\n\\r\\n/* 올바른 예 */\\r\\n.btn-primary.btn-filled:hover:not(:disabled) {\\r\\n  background-color: var(--semantic-color-primary-background-1-hovered);\\r\\n  border-color: var(--semantic-color-primary-stroke-1-rest);\\r\\n}\\r\\n\\r\\n/* 올바른 예 - 정의된 시멘틱 토큰이 없는 경우 파운데이션 토큰 사용 */\\r\\n.btn-primary.btn-outlined:hover:not(:disabled) {\\r\\n  background-color: var(--foundation-color-transparent-light-50);\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"컴포넌트-props-정의-규칙\",\n      children: \"컴포넌트 Props 정의 규칙\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"명확한 타입 정의 (string, number, boolean, ReactNode 등)\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"기본값 설정\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"필요한 검증 로직 추가\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"사용 예시 주석 포함\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-jsx\",\n        children: \"/**\\r\\n * 버튼 컴포넌트\\r\\n * @param {object} props - 컴포넌트 속성\\r\\n * @param {'primary'|'secondary'|'cta'} props.variant - 버튼 종류(상황별)\\r\\n * @param {'filled'|'outlined'|'transparent'} props.style - 버튼 스타일\\r\\n * @param {'xs'|'sm'|'md'|'lg'|'xl'} props.size - 버튼 크기\\r\\n * @param {boolean} props.fullWidth - 전체 너비 적용 여부\\r\\n * @param {boolean} props.disabled - 비활성화 여부\\r\\n * @param {React.ReactNode} props.leftIcon - 왼쪽 아이콘\\r\\n * @param {React.ReactNode} props.rightIcon - 오른쪽 아이콘\\r\\n * @param {React.ReactNode} props.children - 버튼 내용\\r\\n * @param {function} props.onClick - 클릭 이벤트 핸들러\\r\\n */\\n\"\n      })\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/blocks/dist sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/core/dist/components sync recursive\";\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@storybook/core/dist/theming sync recursive\";\nmodule.exports = webpackEmptyContext;"],"names":[],"sourceRoot":""}